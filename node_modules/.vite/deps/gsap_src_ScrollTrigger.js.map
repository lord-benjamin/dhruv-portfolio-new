{
  "version": 3,
  "sources": ["../../gsap/src/Observer.js", "../../gsap/src/ScrollTrigger.js"],
  "sourcesContent": ["/*!\n * Observer 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _clamp, _win, _doc, _docEl, _body, _isTouch, _pointerType, ScrollTrigger, _root, _normalizer, _eventTypes, _context,\n\t_getGSAP = () => gsap || (typeof(window) !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_startup = 1,\n\t_observers = [],\n\t_scrollers = [],\n\t_proxies = [],\n\t_getTime = Date.now,\n\t_bridge = (name, value) => value,\n\t_integrate = () => {\n\t\tlet core = ScrollTrigger.core,\n\t\t\tdata = core.bridge || {},\n\t\t\tscrollers = core._scrollers,\n\t\t\tproxies = core._proxies;\n\t\tscrollers.push(..._scrollers);\n\t\tproxies.push(..._proxies);\n\t\t_scrollers = scrollers;\n\t\t_proxies = proxies;\n\t\t_bridge = (name, value) => data[name](value);\n\t},\n\t_getProxyProp = (element, property) => ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property],\n\t_isViewport = el => !!~_root.indexOf(el),\n\t_addListener = (element, type, func, passive, capture) => element.addEventListener(type, func, {passive: passive !== false, capture: !!capture}),\n\t_removeListener = (element, type, func, capture) => element.removeEventListener(type, func, !!capture),\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_onScroll = () => (_normalizer && _normalizer.isPressed) || _scrollers.cache++,\n\t_scrollCacheFunc = (f, doNotCache) => {\n\t\tlet cachingFunc = value => { // since reading the scrollTop/scrollLeft/pageOffsetY/pageOffsetX can trigger a layout, this function allows us to cache the value so it only gets read fresh after a \"scroll\" event fires (or while we're refreshing because that can lengthen the page and alter the scroll position). when \"soft\" is true, that means don't actually set the scroll, but cache the new value instead (useful in ScrollSmoother)\n\t\t\tif (value || value === 0) {\n\t\t\t\t_startup && (_win.history.scrollRestoration = \"manual\"); // otherwise the new position will get overwritten by the browser onload.\n\t\t\t\tlet isNormalizing = _normalizer && _normalizer.isPressed;\n\t\t\t\tvalue = cachingFunc.v = Math.round(value) || (_normalizer && _normalizer.iOS ? 1 : 0); //TODO: iOS Bug: if you allow it to go to 0, Safari can start to report super strange (wildly inaccurate) touch positions!\n\t\t\t\tf(value);\n\t\t\t\tcachingFunc.cacheID = _scrollers.cache;\n\t\t\t\tisNormalizing && _bridge(\"ss\", value); // set scroll (notify ScrollTrigger so it can dispatch a \"scrollStart\" event if necessary\n\t\t\t} else if (doNotCache || _scrollers.cache !== cachingFunc.cacheID || _bridge(\"ref\")) {\n\t\t\t\tcachingFunc.cacheID = _scrollers.cache;\n\t\t\t\tcachingFunc.v = f();\n\t\t\t}\n\t\t\treturn cachingFunc.v + cachingFunc.offset;\n\t\t};\n\t\tcachingFunc.offset = 0;\n\t\treturn f && cachingFunc;\n\t},\n\t_horizontal = {s: _scrollLeft, p: \"left\", p2: \"Left\", os: \"right\", os2: \"Right\", d: \"width\", d2: \"Width\", a: \"x\", sc: _scrollCacheFunc(function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0})},\n\t_vertical = {s: _scrollTop, p: \"top\", p2: \"Top\", os: \"bottom\", os2: \"Bottom\", d: \"height\", d2: \"Height\", a: \"y\", op: _horizontal, sc: _scrollCacheFunc(function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0})},\n\t_getTarget = (t, self) => ((self && self._ctx && self._ctx.selector) || gsap.utils.toArray)(t)[0] || (typeof(t) === \"string\" && gsap.config().nullTargetWarn !== false ? console.warn(\"Element not found:\", t) : null),\n\n\t_getScrollFunc = (element, {s, sc}) => { // we store the scroller functions in an alternating sequenced Array like [element, verticalScrollFunc, horizontalScrollFunc, ...] so that we can minimize memory, maximize performance, and we also record the last position as a \".rec\" property in order to revert to that after refreshing to ensure things don't shift around.\n\t\t_isViewport(element) && (element = _doc.scrollingElement || _docEl);\n\t\tlet i = _scrollers.indexOf(element),\n\t\t\toffset = sc === _vertical.sc ? 1 : 2;\n\t\t!~i && (i = _scrollers.push(element) - 1);\n\t\t_scrollers[i + offset] || _addListener(element, \"scroll\", _onScroll); // clear the cache when a scroll occurs\n\t\tlet prev = _scrollers[i + offset],\n\t\t\tfunc = prev || (_scrollers[i + offset] = _scrollCacheFunc(_getProxyProp(element, s), true) || (_isViewport(element) ? sc : _scrollCacheFunc(function(value) { return arguments.length ? (element[s] = value) : element[s]; })));\n\t\tfunc.target = element;\n\t\tprev || (func.smooth = gsap.getProperty(element, \"scrollBehavior\") === \"smooth\"); // only set it the first time (don't reset every time a scrollFunc is requested because perhaps it happens during a refresh() when it's disabled in ScrollTrigger.\n\t\treturn func;\n\t},\n\t_getVelocityProp = (value, minTimeRefresh, useDelta) => {\n\t\tlet v1 = value,\n\t\t\tv2 = value,\n\t\t\tt1 = _getTime(),\n\t\t\tt2 = t1,\n\t\t\tmin = minTimeRefresh || 50,\n\t\t\tdropToZeroTime = Math.max(500, min * 3),\n\t\t\tupdate = (value, force) => {\n\t\t\t\tlet t = _getTime();\n\t\t\t\tif (force || t - t1 > min) {\n\t\t\t\t\tv2 = v1;\n\t\t\t\t\tv1 = value;\n\t\t\t\t\tt2 = t1;\n\t\t\t\t\tt1 = t;\n\t\t\t\t} else if (useDelta) {\n\t\t\t\t\tv1 += value;\n\t\t\t\t} else { // not totally necessary, but makes it a bit more accurate by adjusting the v1 value according to the new slope. This way we're not just ignoring the incoming data. Removing for now because it doesn't seem to make much practical difference and it's probably not worth the kb.\n\t\t\t\t\tv1 = v2 + (value - v2) / (t - t2) * (t1 - t2);\n\t\t\t\t}\n\t\t\t},\n\t\t\treset = () => { v2 = v1 = useDelta ? 0 : v1; t2 = t1 = 0; },\n\t\t\tgetVelocity = latestValue => {\n\t\t\t\tlet tOld = t2,\n\t\t\t\t\tvOld = v2,\n\t\t\t\t\tt = _getTime();\n\t\t\t\t(latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);\n\t\t\t\treturn (t1 === t2 || t - t2 > dropToZeroTime) ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;\n\t\t\t};\n\t\treturn {update, reset, getVelocity};\n\t},\n\t_getEvent = (e, preventDefault) => {\n\t\tpreventDefault && !e._gsapAllow && e.preventDefault();\n\t\treturn e.changedTouches ? e.changedTouches[0] : e;\n\t},\n\t_getAbsoluteMax = a => {\n\t\tlet max = Math.max(...a),\n\t\t\tmin = Math.min(...a);\n\t\treturn Math.abs(max) >= Math.abs(min) ? max : min;\n\t},\n\t_setScrollTrigger = () => {\n\t\tScrollTrigger = gsap.core.globals().ScrollTrigger;\n\t\tScrollTrigger && ScrollTrigger.core && _integrate();\n\t},\n\t_initCore = core => {\n\t\tgsap = core || _getGSAP();\n\t\tif (!_coreInitted && gsap && typeof(document) !== \"undefined\" && document.body) {\n\t\t\t_win = window;\n\t\t\t_doc = document;\n\t\t\t_docEl = _doc.documentElement;\n\t\t\t_body = _doc.body;\n\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t_context = gsap.core.context || function() {};\n\t\t\t_pointerType = \"onpointerenter\" in _body ? \"pointer\" : \"mouse\";\n\t\t\t// isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\t\t\t_isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : (\"ontouchstart\" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) ? 2 : 0;\n\t\t\t_eventTypes = Observer.eventTypes = (\"ontouchstart\" in _docEl ? \"touchstart,touchmove,touchcancel,touchend\" : !(\"onpointerdown\" in _docEl) ? \"mousedown,mousemove,mouseup,mouseup\" : \"pointerdown,pointermove,pointercancel,pointerup\").split(\",\");\n\t\t\tsetTimeout(() => _startup = 0, 500);\n\t\t\t_setScrollTrigger();\n\t\t\t_coreInitted = 1;\n\t\t}\n\t\treturn _coreInitted;\n\t};\n\n_horizontal.op = _vertical;\n_scrollers.cache = 0;\n\nexport class Observer {\n\tconstructor(vars) {\n\t\tthis.init(vars);\n\t}\n\n\tinit(vars) {\n\t\t_coreInitted || _initCore(gsap) || console.warn(\"Please gsap.registerPlugin(Observer)\");\n\t\tScrollTrigger || _setScrollTrigger();\n\t\tlet {tolerance, dragMinimum, type, target, lineHeight, debounce, preventDefault, onStop, onStopDelay, ignore, wheelSpeed, event, onDragStart, onDragEnd, onDrag, onPress, onRelease, onRight, onLeft, onUp, onDown, onChangeX, onChangeY, onChange, onToggleX, onToggleY, onHover, onHoverEnd, onMove, ignoreCheck, isNormalizer, onGestureStart, onGestureEnd, onWheel, onEnable, onDisable, onClick, scrollSpeed, capture, allowClicks, lockAxis, onLockAxis} = vars;\n\t\tthis.target = target = _getTarget(target) || _docEl;\n\t\tthis.vars = vars;\n\t\tignore && (ignore = gsap.utils.toArray(ignore));\n\t\ttolerance = tolerance || 1e-9;\n\t\tdragMinimum = dragMinimum || 0;\n\t\twheelSpeed = wheelSpeed || 1;\n\t\tscrollSpeed = scrollSpeed || 1;\n\t\ttype = type || \"wheel,touch,pointer\";\n\t\tdebounce = debounce !== false;\n\t\tlineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22); // note: browser may report \"normal\", so default to 22.\n\t\tlet id, onStopDelayedCall, dragged, moved, wheeled, locked, axis,\n\t\t\tself = this,\n\t\t\tprevDeltaX = 0,\n\t\t\tprevDeltaY = 0,\n\t\t\tpassive = vars.passive || !preventDefault,\n\t\t\tscrollFuncX = _getScrollFunc(target, _horizontal),\n\t\t\tscrollFuncY = _getScrollFunc(target, _vertical),\n\t\t\tscrollX = scrollFuncX(),\n\t\t\tscrollY = scrollFuncY(),\n\t\t\tlimitToTouch = ~type.indexOf(\"touch\") && !~type.indexOf(\"pointer\") && _eventTypes[0] === \"pointerdown\", // for devices that accommodate mouse events and touch events, we need to distinguish.\n\t\t\tisViewport = _isViewport(target),\n\t\t\townerDoc = target.ownerDocument || _doc,\n\t\t\tdeltaX = [0, 0, 0], // wheel, scroll, pointer/touch\n\t\t\tdeltaY = [0, 0, 0],\n\t\t\tonClickTime = 0,\n\t\t\tclickCapture = () => onClickTime = _getTime(),\n\t\t\t_ignoreCheck = (e, isPointerOrTouch) => (self.event = e) && (ignore && ~ignore.indexOf(e.target)) || (isPointerOrTouch && limitToTouch && e.pointerType !== \"touch\") || (ignoreCheck && ignoreCheck(e, isPointerOrTouch)),\n\t\t\tonStopFunc = () => {\n\t\t\t\tself._vx.reset();\n\t\t\t\tself._vy.reset();\n\t\t\t\tonStopDelayedCall.pause();\n\t\t\t\tonStop && onStop(self);\n\t\t\t},\n\t\t\tupdate = () => {\n\t\t\t\tlet dx = self.deltaX = _getAbsoluteMax(deltaX),\n\t\t\t\t\tdy = self.deltaY = _getAbsoluteMax(deltaY),\n\t\t\t\t\tchangedX = Math.abs(dx) >= tolerance,\n\t\t\t\t\tchangedY = Math.abs(dy) >= tolerance;\n\t\t\t\tonChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY); // in ScrollTrigger.normalizeScroll(), we need to know if it was touch/pointer so we need access to the deltaX/deltaY Arrays before we clear them out.\n\t\t\t\tif (changedX) {\n\t\t\t\t\tonRight && self.deltaX > 0 && onRight(self);\n\t\t\t\t\tonLeft && self.deltaX < 0 && onLeft(self);\n\t\t\t\t\tonChangeX && onChangeX(self);\n\t\t\t\t\tonToggleX && ((self.deltaX < 0) !== (prevDeltaX < 0)) && onToggleX(self);\n\t\t\t\t\tprevDeltaX = self.deltaX;\n\t\t\t\t\tdeltaX[0] = deltaX[1] = deltaX[2] = 0\n\t\t\t\t}\n\t\t\t\tif (changedY) {\n\t\t\t\t\tonDown && self.deltaY > 0 && onDown(self);\n\t\t\t\t\tonUp && self.deltaY < 0 && onUp(self);\n\t\t\t\t\tonChangeY && onChangeY(self);\n\t\t\t\t\tonToggleY && ((self.deltaY < 0) !== (prevDeltaY < 0)) && onToggleY(self);\n\t\t\t\t\tprevDeltaY = self.deltaY;\n\t\t\t\t\tdeltaY[0] = deltaY[1] = deltaY[2] = 0\n\t\t\t\t}\n\t\t\t\tif (moved || dragged) {\n\t\t\t\t\tonMove && onMove(self);\n\t\t\t\t\tif (dragged) {\n\t\t\t\t\t\tonDrag(self);\n\t\t\t\t\t\tdragged = false;\n\t\t\t\t\t}\n\t\t\t\t\tmoved = false;\n\t\t\t\t}\n\t\t\t\tlocked && !(locked = false) && onLockAxis && onLockAxis(self);\n\t\t\t\tif (wheeled) {\n\t\t\t\t\tonWheel(self);\n\t\t\t\t\twheeled = false;\n\t\t\t\t}\n\t\t\t\tid = 0;\n\t\t\t},\n\t\t\tonDelta = (x, y, index) => {\n\t\t\t\tdeltaX[index] += x;\n\t\t\t\tdeltaY[index] += y;\n\t\t\t\tself._vx.update(x);\n\t\t\t\tself._vy.update(y);\n\t\t\t\tdebounce ? id || (id = requestAnimationFrame(update)) : update();\n\t\t\t},\n\t\t\tonTouchOrPointerDelta = (x, y) => {\n\t\t\t\tif (lockAxis && !axis) {\n\t\t\t\t\tself.axis = axis = Math.abs(x) > Math.abs(y) ? \"x\" : \"y\";\n\t\t\t\t\tlocked = true;\n\t\t\t\t}\n\t\t\t\tif (axis !== \"y\") {\n\t\t\t\t\tdeltaX[2] += x;\n\t\t\t\t\tself._vx.update(x, true); // update the velocity as frequently as possible instead of in the debounced function so that very quick touch-scrolls (flicks) feel natural. If it's the mouse/touch/pointer, force it so that we get snappy/accurate momentum scroll.\n\t\t\t\t}\n\t\t\t\tif (axis !== \"x\") {\n\t\t\t\t\tdeltaY[2] += y;\n\t\t\t\t\tself._vy.update(y, true);\n\t\t\t\t}\n\t\t\t\tdebounce ? id || (id = requestAnimationFrame(update)) : update();\n\t\t\t},\n\t\t\t_onDrag = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tlet x = e.clientX,\n\t\t\t\t\ty = e.clientY,\n\t\t\t\t\tdx = x - self.x,\n\t\t\t\t\tdy = y - self.y,\n\t\t\t\t\tisDragging = self.isDragging;\n\t\t\t\tself.x = x;\n\t\t\t\tself.y = y;\n\t\t\t\tif (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {\n\t\t\t\t\tonDrag && (dragged = true);\n\t\t\t\t\tisDragging || (self.isDragging = true);\n\t\t\t\t\tonTouchOrPointerDelta(dx, dy);\n\t\t\t\t\tisDragging || onDragStart && onDragStart(self);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_onPress = self.onPress = e => {\n\t\t\t\tif (_ignoreCheck(e, 1) || (e && e.button)) {return;}\n\t\t\t\tself.axis = axis = null;\n\t\t\t\tonStopDelayedCall.pause();\n\t\t\t\tself.isPressed = true;\n\t\t\t\te = _getEvent(e); // note: may need to preventDefault(?) Won't side-scroll on iOS Safari if we do, though.\n\t\t\t\tprevDeltaX = prevDeltaY = 0;\n\t\t\t\tself.startX = self.x = e.clientX;\n\t\t\t\tself.startY = self.y = e.clientY;\n\t\t\t\tself._vx.reset(); // otherwise the t2 may be stale if the user touches and flicks super fast and releases in less than 2 requestAnimationFrame ticks, causing velocity to be 0.\n\t\t\t\tself._vy.reset();\n\t\t\t\t_addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, passive, true);\n\t\t\t\tself.deltaX = self.deltaY = 0;\n\t\t\t\tonPress && onPress(self);\n\t\t\t},\n\t\t\t_onRelease = self.onRelease = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\t_removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n\t\t\t\tlet isTrackingDrag = !isNaN(self.y - self.startY),\n\t\t\t\t\twasDragging = self.isDragging,\n\t\t\t\t\tisDragNotClick = wasDragging && (Math.abs(self.x - self.startX) > 3 || Math.abs(self.y - self.startY) > 3), // some touch devices need some wiggle room in terms of sensing clicks - the finger may move a few pixels.\n\t\t\t\t\teventData = _getEvent(e);\n\t\t\t\tif (!isDragNotClick && isTrackingDrag) {\n\t\t\t\t\tself._vx.reset();\n\t\t\t\t\tself._vy.reset();\n\t\t\t\t\t//if (preventDefault && allowClicks && self.isPressed) { // check isPressed because in a rare edge case, the inputObserver in ScrollTrigger may stopPropagation() on the press/drag, so the onRelease may get fired without the onPress/onDrag ever getting called, thus it could trigger a click to occur on a link after scroll-dragging it.\n\t\t\t\t\tif (preventDefault && allowClicks) {\n\t\t\t\t\t\tgsap.delayedCall(0.08, () => { // some browsers (like Firefox) won't trust script-generated clicks, so if the user tries to click on a video to play it, for example, it simply won't work. Since a regular \"click\" event will most likely be generated anyway (one that has its isTrusted flag set to true), we must slightly delay our script-generated click so that the \"real\"/trusted one is prioritized. Remember, when there are duplicate events in quick succession, we suppress all but the first one. Some browsers don't even trigger the \"real\" one at all, so our synthetic one is a safety valve that ensures that no matter what, a click event does get dispatched.\n\t\t\t\t\t\t\tif (_getTime() - onClickTime > 300 && !e.defaultPrevented) {\n\t\t\t\t\t\t\t\tif (e.target.click) { //some browsers (like mobile Safari) don't properly trigger the click event\n\t\t\t\t\t\t\t\t\te.target.click();\n\t\t\t\t\t\t\t\t} else if (ownerDoc.createEvent) {\n\t\t\t\t\t\t\t\t\tlet syntheticEvent = ownerDoc.createEvent(\"MouseEvents\");\n\t\t\t\t\t\t\t\t\tsyntheticEvent.initMouseEvent(\"click\", true, true, _win, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);\n\t\t\t\t\t\t\t\t\te.target.dispatchEvent(syntheticEvent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.isDragging = self.isGesturing = self.isPressed = false;\n\t\t\t\tonStop && wasDragging && !isNormalizer && onStopDelayedCall.restart(true);\n\t\t\t\tonDragEnd && wasDragging && onDragEnd(self);\n\t\t\t\tonRelease && onRelease(self, isDragNotClick);\n\t\t\t},\n\t\t\t_onGestureStart = e => e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging),\n\t\t\t_onGestureEnd = () => (self.isGesturing = false) || onGestureEnd(self),\n\t\t\tonScroll = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\tlet x = scrollFuncX(),\n\t\t\t\t\ty = scrollFuncY();\n\t\t\t\tonDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);\n\t\t\t\tscrollX = x;\n\t\t\t\tscrollY = y;\n\t\t\t\tonStop && onStopDelayedCall.restart(true);\n\t\t\t},\n\t\t\t_onWheel = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tonWheel && (wheeled = true);\n\t\t\t\tlet multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;\n\t\t\t\tonDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);\n\t\t\t\tonStop && !isNormalizer && onStopDelayedCall.restart(true);\n\t\t\t},\n\t\t\t_onMove = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\tlet x = e.clientX,\n\t\t\t\t\ty = e.clientY,\n\t\t\t\t\tdx = x - self.x,\n\t\t\t\t\tdy = y - self.y;\n\t\t\t\tself.x = x;\n\t\t\t\tself.y = y;\n\t\t\t\tmoved = true;\n\t\t\t\tonStop && onStopDelayedCall.restart(true);\n\t\t\t\t(dx || dy) && onTouchOrPointerDelta(dx, dy);\n\t\t\t},\n\t\t\t_onHover = e => {self.event = e; onHover(self);},\n\t\t\t_onHoverEnd = e => {self.event = e; onHoverEnd(self);},\n\t\t\t_onClick = e => _ignoreCheck(e) || (_getEvent(e, preventDefault) && onClick(self));\n\n\t\tonStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();\n\n\t\tself.deltaX = self.deltaY = 0;\n\t\tself._vx = _getVelocityProp(0, 50, true);\n\t\tself._vy = _getVelocityProp(0, 50, true);\n\t\tself.scrollX = scrollFuncX;\n\t\tself.scrollY = scrollFuncY;\n\t\tself.isDragging = self.isGesturing = self.isPressed = false;\n\t\t_context(this);\n\t\tself.enable = e => {\n\t\t\tif (!self.isEnabled) {\n\t\t\t\t_addListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\t\t\t\ttype.indexOf(\"scroll\") >= 0 && _addListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, passive, capture);\n\t\t\t\ttype.indexOf(\"wheel\") >= 0 && _addListener(target, \"wheel\", _onWheel, passive, capture);\n\t\t\t\tif ((type.indexOf(\"touch\") >= 0 && _isTouch) || type.indexOf(\"pointer\") >= 0) {\n\t\t\t\t\t_addListener(target, _eventTypes[0], _onPress, passive, capture);\n\t\t\t\t\t_addListener(ownerDoc, _eventTypes[2], _onRelease);\n\t\t\t\t\t_addListener(ownerDoc, _eventTypes[3], _onRelease);\n\t\t\t\t\tallowClicks && _addListener(target, \"click\", clickCapture, true, true);\n\t\t\t\t\tonClick && _addListener(target, \"click\", _onClick);\n\t\t\t\t\tonGestureStart && _addListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\t\t\t\t\tonGestureEnd && _addListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\t\t\t\t\tonHover && _addListener(target, _pointerType + \"enter\", _onHover);\n\t\t\t\t\tonHoverEnd && _addListener(target, _pointerType + \"leave\", _onHoverEnd);\n\t\t\t\t\tonMove && _addListener(target, _pointerType + \"move\", _onMove);\n\t\t\t\t}\n\t\t\t\tself.isEnabled = true;\n\t\t\t\te && e.type && _onPress(e);\n\t\t\t\tonEnable && onEnable(self);\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\t\tself.disable = () => {\n\t\t\tif (self.isEnabled) {\n\t\t\t\t// only remove the _onScroll listener if there aren't any others that rely on the functionality.\n\t\t\t\t_observers.filter(o => o !== self && _isViewport(o.target)).length || _removeListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\t\t\t\tif (self.isPressed) {\n\t\t\t\t\tself._vx.reset();\n\t\t\t\t\tself._vy.reset();\n\t\t\t\t\t_removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n\t\t\t\t}\n\t\t\t\t_removeListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, capture);\n\t\t\t\t_removeListener(target, \"wheel\", _onWheel, capture);\n\t\t\t\t_removeListener(target, _eventTypes[0], _onPress, capture);\n\t\t\t\t_removeListener(ownerDoc, _eventTypes[2], _onRelease);\n\t\t\t\t_removeListener(ownerDoc, _eventTypes[3], _onRelease);\n\t\t\t\t_removeListener(target, \"click\", clickCapture, true);\n\t\t\t\t_removeListener(target, \"click\", _onClick);\n\t\t\t\t_removeListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\t\t\t\t_removeListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\t\t\t\t_removeListener(target, _pointerType + \"enter\", _onHover);\n\t\t\t\t_removeListener(target, _pointerType + \"leave\", _onHoverEnd);\n\t\t\t\t_removeListener(target, _pointerType + \"move\", _onMove);\n\t\t\t\tself.isEnabled = self.isPressed = self.isDragging = false;\n\t\t\t\tonDisable && onDisable(self);\n\t\t\t}\n\t\t};\n\n\t\tself.kill = self.revert = () => {\n\t\t\tself.disable();\n\t\t\tlet i = _observers.indexOf(self);\n\t\t\ti >= 0 && _observers.splice(i, 1);\n\t\t\t_normalizer === self && (_normalizer = 0);\n\t\t}\n\n\t\t_observers.push(self);\n\t\tisNormalizer && _isViewport(target) && (_normalizer = self);\n\n\t\tself.enable(event);\n\t}\n\n\tget velocityX() {\n\t\treturn this._vx.getVelocity();\n\t}\n\tget velocityY() {\n\t\treturn this._vy.getVelocity();\n\t}\n\n}\n\nObserver.version = \"3.12.5\";\nObserver.create = vars => new Observer(vars);\nObserver.register = _initCore;\nObserver.getAll = () => _observers.slice();\nObserver.getById = id => _observers.filter(o => o.vars.id === id)[0];\n\n_getGSAP() && gsap.registerPlugin(Observer);\n\nexport { Observer as default, _isViewport, _scrollers, _getScrollFunc, _getProxyProp, _proxies, _getVelocityProp, _vertical, _horizontal, _getTarget };", "/*!\n * ScrollTrigger 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport { Observer, _getTarget, _vertical, _horizontal, _scrollers, _proxies, _getScrollFunc, _getProxyProp, _getVelocityProp } from \"./Observer.js\";\n\nlet gsap, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp, _i, _prevWidth, _prevHeight, _autoRefresh, _sort, _suppressOverwrites, _ignoreResize, _normalizer, _ignoreMobileResize, _baseScreenHeight, _baseScreenWidth, _fixIOSBug, _context, _scrollRestoration, _div100vh, _100vh, _isReverted, _clampingMax,\n\t_limitCallbacks, // if true, we'll only trigger callbacks if the active state toggles, so if you scroll immediately past both the start and end positions of a ScrollTrigger (thus inactive to inactive), neither its onEnter nor onLeave will be called. This is useful during startup.\n\t_startup = 1,\n\t_getTime = Date.now,\n\t_time1 = _getTime(),\n\t_lastScrollTime = 0,\n\t_enabled = 0,\n\t_parseClamp = (value, type, self) => {\n\t\tlet clamp = (_isString(value) && (value.substr(0, 6) === \"clamp(\" || value.indexOf(\"max\") > -1));\n\t\tself[\"_\" + type + \"Clamp\"] = clamp;\n\t\treturn clamp ? value.substr(6, value.length - 7) : value;\n\t},\n\t_keepClamp = (value, clamp) => clamp && (!_isString(value) || value.substr(0, 6) !== \"clamp(\") ? \"clamp(\" + value + \")\" : value,\n\t_rafBugFix = () => _enabled && requestAnimationFrame(_rafBugFix), // in some browsers (like Firefox), screen repaints weren't consistent unless we had SOMETHING queued up in requestAnimationFrame()! So this just creates a super simple loop to keep it alive and smooth out repaints.\n\t_pointerDownHandler = () => _pointerIsDown = 1,\n\t_pointerUpHandler = () => _pointerIsDown = 0,\n\t_passThrough = v => v,\n\t_round = value => Math.round(value * 100000) / 100000 || 0,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isViewport = e => !!~_root.indexOf(e),\n\t_getViewportDimension = dimensionProperty => (dimensionProperty === \"Height\" ? _100vh : _win[\"inner\" + dimensionProperty]) || _docEl[\"client\" + dimensionProperty] || _body[\"client\" + dimensionProperty],\n\t_getBoundsFunc = element => _getProxyProp(element, \"getBoundingClientRect\") || (_isViewport(element) ? () => {_winOffsets.width = _win.innerWidth; _winOffsets.height = _100vh; return _winOffsets;} : () => _getBounds(element)),\n\t_getSizeFunc = (scroller, isViewport, {d, d2, a}) => (a = _getProxyProp(scroller, \"getBoundingClientRect\")) ? () => a()[d] : () => (isViewport ? _getViewportDimension(d2) : scroller[\"client\" + d2]) || 0,\n\t_getOffsetsFunc = (element, isViewport) => !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : () => _winOffsets,\n\t_maxScroll = (element, {s, d2, d, a}) => Math.max(0, (s = \"scroll\" + d2) && (a = _getProxyProp(element, s)) ? a() - _getBoundsFunc(element)()[d] : _isViewport(element) ? (_docEl[s] || _body[s]) - _getViewportDimension(d2) : element[s] - element[\"offset\" + d2]),\n\t_iterateAutoRefresh = (func, events) => {\n\t\tfor (let i = 0; i < _autoRefresh.length; i += 3) {\n\t\t\t(!events || ~events.indexOf(_autoRefresh[i+1])) && func(_autoRefresh[i], _autoRefresh[i+1], _autoRefresh[i+2]);\n\t\t}\n\t},\n\t_isString = value => typeof(value) === \"string\",\n\t_isFunction = value => typeof(value) === \"function\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isObject = value => typeof(value) === \"object\",\n\t_endAnimation = (animation, reversed, pause) => animation && animation.progress(reversed ? 0 : 1) && pause && animation.pause(),\n\t_callback = (self, func) => {\n\t\tif (self.enabled) {\n\t\t\tlet result = self._ctx ? self._ctx.add(() => func(self)) : func(self);\n\t\t\tresult && result.totalTime && (self.callbackAnimation = result);\n\t\t}\n\t},\n\t_abs = Math.abs,\n\t_left = \"left\",\n\t_top = \"top\",\n\t_right = \"right\",\n\t_bottom = \"bottom\",\n\t_width = \"width\",\n\t_height = \"height\",\n\t_Right = \"Right\",\n\t_Left = \"Left\",\n\t_Top = \"Top\",\n\t_Bottom = \"Bottom\",\n\t_padding = \"padding\",\n\t_margin = \"margin\",\n\t_Width = \"Width\",\n\t_Height = \"Height\",\n\t_px = \"px\",\n\t_getComputedStyle = element => _win.getComputedStyle(element),\n\t_makePositionable = element => { // if the element already has position: absolute or fixed, leave that, otherwise make it position: relative\n\t\tlet position = _getComputedStyle(element).position;\n\t\telement.style.position = (position === \"absolute\" || position === \"fixed\") ? position : \"relative\";\n\t},\n\t_setDefaults = (obj, defaults) => {\n\t\tfor (let p in defaults) {\n\t\t\t(p in obj) || (obj[p] = defaults[p]);\n\t\t}\n\t\treturn obj;\n\t},\n\t_getBounds = (element, withoutTransforms) => {\n\t\tlet tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0}).progress(1),\n\t\t\tbounds = element.getBoundingClientRect();\n\t\ttween && tween.progress(0).kill();\n\t\treturn bounds;\n\t},\n\t_getSize = (element, {d2}) => element[\"offset\" + d2] || element[\"client\" + d2] || 0,\n\t_getLabelRatioArray = timeline => {\n\t\tlet a = [],\n\t\t\tlabels = timeline.labels,\n\t\t\tduration = timeline.duration(),\n\t\t\tp;\n\t\tfor (p in labels) {\n\t\t\ta.push(labels[p] / duration);\n\t\t}\n\t\treturn a;\n\t},\n\t_getClosestLabel = animation => value => gsap.utils.snap(_getLabelRatioArray(animation), value),\n\t_snapDirectional = snapIncrementOrArray => {\n\t\tlet snap = gsap.utils.snap(snapIncrementOrArray),\n\t\t\ta = Array.isArray(snapIncrementOrArray) && snapIncrementOrArray.slice(0).sort((a, b) => a - b);\n\t\treturn a ? (value, direction, threshold= 1e-3) => {\n\t\t\tlet i;\n\t\t\tif (!direction) {\n\t\t\t\treturn snap(value);\n\t\t\t}\n\t\t\tif (direction > 0) {\n\t\t\t\tvalue -= threshold; // to avoid rounding errors. If we're too strict, it might snap forward, then immediately again, and again.\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\tif (a[i] >= value) {\n\t\t\t\t\t\treturn a[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn a[i-1];\n\t\t\t} else {\n\t\t\t\ti = a.length;\n\t\t\t\tvalue += threshold;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (a[i] <= value) {\n\t\t\t\t\t\treturn a[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a[0];\n\t\t} : (value, direction, threshold= 1e-3) => {\n\t\t\tlet snapped = snap(value);\n\t\t\treturn !direction || Math.abs(snapped - value) < threshold || ((snapped - value < 0) === direction < 0) ? snapped : snap(direction < 0 ? value - snapIncrementOrArray : value + snapIncrementOrArray);\n\t\t};\n\t},\n\t_getLabelAtDirection = timeline => (value, st) => _snapDirectional(_getLabelRatioArray(timeline))(value, st.direction),\n\t_multiListener = (func, element, types, callback) => types.split(\",\").forEach(type => func(element, type, callback)),\n\t_addListener = (element, type, func, nonPassive, capture) => element.addEventListener(type, func, {passive: !nonPassive, capture: !!capture}),\n\t_removeListener = (element, type, func, capture) => element.removeEventListener(type, func, !!capture),\n\t_wheelListener = (func, el, scrollFunc) => {\n\t\tscrollFunc = scrollFunc && scrollFunc.wheelHandler\n\t\tif (scrollFunc) {\n\t\t\tfunc(el, \"wheel\", scrollFunc);\n\t\t\tfunc(el, \"touchmove\", scrollFunc);\n\t\t}\n\t},\n\t_markerDefaults = {startColor: \"green\", endColor: \"red\", indent: 0, fontSize: \"16px\", fontWeight:\"normal\"},\n\t_defaults = {toggleActions: \"play\", anticipatePin: 0},\n\t_keywords = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1},\n\t_offsetToPx = (value, size) => {\n\t\tif (_isString(value)) {\n\t\t\tlet eqIndex = value.indexOf(\"=\"),\n\t\t\t\trelative = ~eqIndex ? +(value.charAt(eqIndex-1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\t\t\tif (~eqIndex) {\n\t\t\t\t(value.indexOf(\"%\") > eqIndex) && (relative *= size / 100);\n\t\t\t\tvalue = value.substr(0, eqIndex-1);\n\t\t\t}\n\t\t\tvalue = relative + ((value in _keywords) ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n\t\t}\n\t\treturn value;\n\t},\n\t_createMarker = (type, name, container, direction, {startColor, endColor, fontSize, indent, fontWeight}, offset, matchWidthEl, containerAnimation) => {\n\t\tlet e = _doc.createElement(\"div\"),\n\t\t\tuseFixedPosition = _isViewport(container) || _getProxyProp(container, \"pinType\") === \"fixed\",\n\t\t\tisScroller = type.indexOf(\"scroller\") !== -1,\n\t\t\tparent = useFixedPosition ? _body : container,\n\t\t\tisStart = type.indexOf(\"start\") !== -1,\n\t\t\tcolor = isStart ? startColor : endColor,\n\t\t\tcss = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\t\tcss += \"position:\" + ((isScroller || containerAnimation) && useFixedPosition ? \"fixed;\" : \"absolute;\");\n\t\t(isScroller || containerAnimation || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n\t\tmatchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n\t\te._isStart = isStart;\n\t\te.setAttribute(\"class\", \"gsap-marker-\" + type + (name ? \" marker-\" + name : \"\"));\n\t\te.style.cssText = css;\n\t\te.innerText = name || name === 0 ? type + \"-\" + name : type;\n\t\tparent.children[0] ? parent.insertBefore(e, parent.children[0]) : parent.appendChild(e);\n\t\te._offset = e[\"offset\" + direction.op.d2];\n\t\t_positionMarker(e, 0, direction, isStart);\n\t\treturn e;\n\t},\n\t_positionMarker = (marker, start, direction, flipped) => {\n\t\tlet vars = {display: \"block\"},\n\t\t\tside = direction[flipped ? \"os2\" : \"p2\"],\n\t\t\toppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n\t\tmarker._isFlipped = flipped;\n\t\tvars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n\t\tvars[direction.a] = flipped ? \"1px\" : 0;\n\t\tvars[\"border\" + side + _Width] = 1;\n\t\tvars[\"border\" + oppositeSide + _Width] = 0;\n\t\tvars[direction.p] = start + \"px\";\n\t\tgsap.set(marker, vars);\n\t},\n\t_triggers = [],\n\t_ids = {},\n\t_rafID,\n\t_sync = () => _getTime() - _lastScrollTime > 34 && (_rafID || (_rafID = requestAnimationFrame(_updateAll))),\n\t_onScroll = () => { // previously, we tried to optimize performance by batching/deferring to the next requestAnimationFrame(), but discovered that Safari has a few bugs that make this unworkable (especially on iOS). See https://codepen.io/GreenSock/pen/16c435b12ef09c38125204818e7b45fc?editors=0010 and https://codepen.io/GreenSock/pen/JjOxYpQ/3dd65ccec5a60f1d862c355d84d14562?editors=0010 and https://codepen.io/GreenSock/pen/ExbrPNa/087cef197dc35445a0951e8935c41503?editors=0010\n\t\tif (!_normalizer || !_normalizer.isPressed || _normalizer.startX > _body.clientWidth) { // if the user is dragging the scrollbar, allow it.\n\t\t\t_scrollers.cache++;\n\t\t\tif (_normalizer) {\n\t\t\t\t_rafID || (_rafID = requestAnimationFrame(_updateAll));\n\t\t\t} else {\n\t\t\t\t_updateAll(); // Safari in particular (on desktop) NEEDS the immediate update rather than waiting for a requestAnimationFrame() whereas iOS seems to benefit from waiting for the requestAnimationFrame() tick, at least when normalizing. See https://codepen.io/GreenSock/pen/qBYozqO?editors=0110\n\t\t\t}\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t}\n\t},\n\t_setBaseDimensions = () => {\n\t\t_baseScreenWidth = _win.innerWidth;\n\t\t_baseScreenHeight = _win.innerHeight;\n\t},\n\t_onResize = () => {\n\t\t_scrollers.cache++;\n\t\t!_refreshing && !_ignoreResize && !_doc.fullscreenElement && !_doc.webkitFullscreenElement && (!_ignoreMobileResize || _baseScreenWidth !== _win.innerWidth || Math.abs(_win.innerHeight - _baseScreenHeight) > _win.innerHeight * 0.25) && _resizeDelay.restart(true);\n\t}, // ignore resizes triggered by refresh()\n\t_listeners = {},\n\t_emptyArray = [],\n\t_softRefresh = () => _removeListener(ScrollTrigger, \"scrollEnd\", _softRefresh) || _refreshAll(true),\n\t_dispatch = type => (_listeners[type] && _listeners[type].map(f => f())) || _emptyArray,\n\t_savedStyles = [], // when ScrollTrigger.saveStyles() is called, the inline styles are recorded in this Array in a sequential format like [element, cssText, gsCache, media]. This keeps it very memory-efficient and fast to iterate through.\n\t_revertRecorded = media => {\n\t\tfor (let i = 0; i < _savedStyles.length; i+=5) {\n\t\t\tif (!media || _savedStyles[i+4] && _savedStyles[i+4].query === media) {\n\t\t\t\t_savedStyles[i].style.cssText = _savedStyles[i+1];\n\t\t\t\t_savedStyles[i].getBBox && _savedStyles[i].setAttribute(\"transform\", _savedStyles[i+2] || \"\");\n\t\t\t\t_savedStyles[i+3].uncache = 1;\n\t\t\t}\n\t\t}\n\t},\n\t_revertAll = (kill, media) => {\n\t\tlet trigger;\n\t\tfor (_i = 0; _i < _triggers.length; _i++) {\n\t\t\ttrigger = _triggers[_i];\n\t\t\tif (trigger && (!media || trigger._ctx === media)) {\n\t\t\t\tif (kill) {\n\t\t\t\t\ttrigger.kill(1);\n\t\t\t\t} else {\n\t\t\t\t\ttrigger.revert(true, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_isReverted = true;\n\t\tmedia && _revertRecorded(media);\n\t\tmedia || _dispatch(\"revert\");\n\t},\n\t_clearScrollMemory = (scrollRestoration, force) => { // zero-out all the recorded scroll positions. Don't use _triggers because if, for example, .matchMedia() is used to create some ScrollTriggers and then the user resizes and it removes ALL ScrollTriggers, and then go back to a size where there are ScrollTriggers, it would have kept the position(s) saved from the initial state.\n\t\t_scrollers.cache++;\n\t\t(force || !_refreshingAll) && _scrollers.forEach(obj => _isFunction(obj) && obj.cacheID++ && (obj.rec = 0));\n\t\t_isString(scrollRestoration) && (_win.history.scrollRestoration = _scrollRestoration = scrollRestoration);\n\t},\n\t_refreshingAll,\n\t_refreshID = 0,\n\t_queueRefreshID,\n\t_queueRefreshAll = () => { // we don't want to call _refreshAll() every time we create a new ScrollTrigger (for performance reasons) - it's better to batch them. Some frameworks dynamically load content and we can't rely on the window's \"load\" or \"DOMContentLoaded\" events to trigger it.\n\t\tif (_queueRefreshID !== _refreshID) {\n\t\t\tlet id = _queueRefreshID = _refreshID;\n\t\t\trequestAnimationFrame(() => id === _refreshID && _refreshAll(true));\n\t\t}\n\t},\n\t_refresh100vh = () => {\n\t\t_body.appendChild(_div100vh);\n\t\t_100vh = (!_normalizer && _div100vh.offsetHeight) || _win.innerHeight;\n\t\t_body.removeChild(_div100vh);\n\t},\n\t_hideAllMarkers = hide => _toArray(\".gsap-marker-start, .gsap-marker-end, .gsap-marker-scroller-start, .gsap-marker-scroller-end\").forEach(el => el.style.display = hide ? \"none\" : \"block\"),\n\t_refreshAll = (force, skipRevert) => {\n\t\tif (_lastScrollTime && !force && !_isReverted) {\n\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\treturn;\n\t\t}\n\t\t_refresh100vh();\n\t\t_refreshingAll = ScrollTrigger.isRefreshing = true;\n\t\t_scrollers.forEach(obj => _isFunction(obj) && ++obj.cacheID && (obj.rec = obj())); // force the clearing of the cache because some browsers take a little while to dispatch the \"scroll\" event and the user may have changed the scroll position and then called ScrollTrigger.refresh() right away\n\t\tlet refreshInits = _dispatch(\"refreshInit\");\n\t\t_sort && ScrollTrigger.sort();\n\t\tskipRevert || _revertAll();\n\t\t_scrollers.forEach(obj => {\n\t\t\tif (_isFunction(obj)) {\n\t\t\t\tobj.smooth && (obj.target.style.scrollBehavior = \"auto\"); // smooth scrolling interferes\n\t\t\t\tobj(0);\n\t\t\t}\n\t\t});\n\t\t_triggers.slice(0).forEach(t => t.refresh()) // don't loop with _i because during a refresh() someone could call ScrollTrigger.update() which would iterate through _i resulting in a skip.\n\t\t_isReverted = false;\n\t\t_triggers.forEach((t) => { // nested pins (pinnedContainer) with pinSpacing may expand the container, so we must accommodate that here.\n\t\t\tif (t._subPinOffset && t.pin) {\n\t\t\t\tlet prop = t.vars.horizontal ? \"offsetWidth\" : \"offsetHeight\",\n\t\t\t\t\toriginal = t.pin[prop];\n\t\t\t\tt.revert(true, 1);\n\t\t\t\tt.adjustPinSpacing(t.pin[prop] - original);\n\t\t\t\tt.refresh();\n\t\t\t}\n\t\t});\n\t\t_clampingMax = 1; // pinSpacing might be propping a page open, thus when we .setPositions() to clamp a ScrollTrigger's end we should leave the pinSpacing alone. That's what this flag is for.\n\t\t_hideAllMarkers(true);\n\t\t_triggers.forEach(t => { // the scroller's max scroll position may change after all the ScrollTriggers refreshed (like pinning could push it down), so we need to loop back and correct any with end: \"max\". Same for anything with a clamped end\n\t\t\tlet max = _maxScroll(t.scroller, t._dir),\n\t\t\t\tendClamp = t.vars.end === \"max\" || (t._endClamp && t.end > max),\n\t\t\t\tstartClamp = t._startClamp && t.start >= max;\n\t\t\t(endClamp || startClamp) && t.setPositions(startClamp ? max - 1 : t.start, endClamp ? Math.max(startClamp ? max : t.start + 1, max) : t.end, true);\n\t\t});\n\t\t_hideAllMarkers(false);\n\t\t_clampingMax = 0;\n\t\trefreshInits.forEach(result => result && result.render && result.render(-1)); // if the onRefreshInit() returns an animation (typically a gsap.set()), revert it. This makes it easy to put things in a certain spot before refreshing for measurement purposes, and then put things back.\n\t\t_scrollers.forEach(obj => {\n\t\t\tif (_isFunction(obj)) {\n\t\t\t\tobj.smooth && requestAnimationFrame(() => obj.target.style.scrollBehavior = \"smooth\");\n\t\t\t\tobj.rec && obj(obj.rec);\n\t\t\t}\n\t\t});\n\t\t_clearScrollMemory(_scrollRestoration, 1);\n\t\t_resizeDelay.pause();\n\t\t_refreshID++;\n\t\t_refreshingAll = 2;\n\t\t_updateAll(2);\n\t\t_triggers.forEach(t => _isFunction(t.vars.onRefresh) && t.vars.onRefresh(t));\n\t\t_refreshingAll = ScrollTrigger.isRefreshing = false;\n\t\t_dispatch(\"refresh\");\n\t},\n\t_lastScroll = 0,\n\t_direction = 1,\n\t_primary,\n\t_updateAll = (force) => {\n\t\tif (force === 2 || (!_refreshingAll && !_isReverted)) { // _isReverted could be true if, for example, a matchMedia() is in the process of executing. We don't want to update during the time everything is reverted.\n\t\t\tScrollTrigger.isUpdating = true;\n\t\t\t_primary && _primary.update(0); // ScrollSmoother uses refreshPriority -9999 to become the primary that gets updated before all others because it affects the scroll position.\n\t\t\tlet l = _triggers.length,\n\t\t\t\ttime = _getTime(),\n\t\t\t\trecordVelocity = time - _time1 >= 50,\n\t\t\t\tscroll = l && _triggers[0].scroll();\n\t\t\t_direction = _lastScroll > scroll ? -1 : 1;\n\t\t\t_refreshingAll || (_lastScroll = scroll);\n\t\t\tif (recordVelocity) {\n\t\t\t\tif (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n\t\t\t\t\t_lastScrollTime = 0;\n\t\t\t\t\t_dispatch(\"scrollEnd\");\n\t\t\t\t}\n\t\t\t\t_time2 = _time1;\n\t\t\t\t_time1 = time;\n\t\t\t}\n\t\t\tif (_direction < 0) {\n\t\t\t\t_i = l;\n\t\t\t\twhile (_i-- > 0) {\n\t\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t\t}\n\t\t\t\t_direction = 1;\n\t\t\t} else {\n\t\t\t\tfor (_i = 0; _i < l; _i++) {\n\t\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t\t}\n\t\t\t}\n\t\t\tScrollTrigger.isUpdating = false;\n\t\t}\n\t\t_rafID = 0;\n\t},\n\t_propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\", \"float\", \"zIndex\", \"gridColumnStart\", \"gridColumnEnd\", \"gridRowStart\", \"gridRowEnd\", \"gridArea\", \"justifySelf\", \"alignSelf\", \"placeSelf\", \"order\"],\n\t_stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n\t_swapPinOut = (pin, spacer, state) => {\n\t\t_setState(state);\n\t\tlet cache = pin._gsap;\n\t\tif (cache.spacerIsNative) {\n\t\t\t_setState(cache.spacerState);\n\t\t} else if (pin._gsap.swappedIn) {\n\t\t\tlet parent = spacer.parentNode;\n\t\t\tif (parent) {\n\t\t\t\tparent.insertBefore(pin, spacer);\n\t\t\t\tparent.removeChild(spacer);\n\t\t\t}\n\t\t}\n\t\tpin._gsap.swappedIn = false;\n\t},\n\t_swapPinIn = (pin, spacer, cs, spacerState) => {\n\t\tif (!pin._gsap.swappedIn) {\n\t\t\tlet i = _propNamesToCopy.length,\n\t\t\t\tspacerStyle = spacer.style,\n\t\t\t\tpinStyle = pin.style,\n\t\t\t\tp;\n\t\t\twhile (i--) {\n\t\t\t\tp = _propNamesToCopy[i];\n\t\t\t\tspacerStyle[p] = cs[p];\n\t\t\t}\n\t\t\tspacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n\t\t\t(cs.display === \"inline\") && (spacerStyle.display = \"inline-block\");\n\t\t\tpinStyle[_bottom] = pinStyle[_right] = \"auto\";\n\t\t\tspacerStyle.flexBasis = cs.flexBasis || \"auto\";\n\t\t\tspacerStyle.overflow = \"visible\";\n\t\t\tspacerStyle.boxSizing = \"border-box\";\n\t\t\tspacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n\t\t\tspacerStyle[_height] = _getSize(pin, _vertical) + _px;\n\t\t\tspacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\t\t\t_setState(spacerState);\n\t\t\tpinStyle[_width] = pinStyle[\"max\" + _Width] = cs[_width];\n\t\t\tpinStyle[_height] = pinStyle[\"max\" + _Height] = cs[_height];\n\t\t\tpinStyle[_padding] = cs[_padding];\n\t\t\tif (pin.parentNode !== spacer) {\n\t\t\t\tpin.parentNode.insertBefore(spacer, pin);\n\t\t\t\tspacer.appendChild(pin);\n\t\t\t}\n\t\t\tpin._gsap.swappedIn = true;\n\t\t}\n\t},\n\t_capsExp = /([A-Z])/g,\n\t_setState = state => {\n\t\tif (state) {\n\t\t\tlet style = state.t.style,\n\t\t\t\tl = state.length,\n\t\t\t\ti = 0,\n\t\t\t\tp, value;\n\t\t\t(state.t._gsap || gsap.core.getCache(state.t)).uncache = 1; // otherwise transforms may be off\n\t\t\tfor (; i < l; i +=2) {\n\t\t\t\tvalue = state[i+1];\n\t\t\t\tp = state[i];\n\t\t\t\tif (value) {\n\t\t\t\t\tstyle[p] = value;\n\t\t\t\t} else if (style[p]) {\n\t\t\t\t\tstyle.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_getState = element => { // returns an Array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n\t\tlet l = _stateProps.length,\n\t\t\tstyle = element.style,\n\t\t\tstate = [],\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\tstate.push(_stateProps[i], style[_stateProps[i]]);\n\t\t}\n\t\tstate.t = element;\n\t\treturn state;\n\t},\n\t_copyState = (state, override, omitOffsets) => {\n\t\tlet result = [],\n\t\t\tl = state.length,\n\t\t\ti = omitOffsets ? 8 : 0, // skip top, left, right, bottom if omitOffsets is true\n\t\t\tp;\n\t\tfor (; i < l; i += 2) {\n\t\t\tp = state[i];\n\t\t\tresult.push(p, (p in override) ? override[p] : state[i+1]);\n\t\t}\n\t\tresult.t = state.t;\n\t\treturn result;\n\t},\n\t_winOffsets = {left:0, top:0},\n\t// // potential future feature (?) Allow users to calculate where a trigger hits (scroll position) like getScrollPosition(\"#id\", \"top bottom\")\n\t// _getScrollPosition = (trigger, position, {scroller, containerAnimation, horizontal}) => {\n\t// \tscroller = _getTarget(scroller || _win);\n\t// \tlet direction = horizontal ? _horizontal : _vertical,\n\t// \t\tisViewport = _isViewport(scroller);\n\t// \t_getSizeFunc(scroller, isViewport, direction);\n\t// \treturn _parsePosition(position, _getTarget(trigger), _getSizeFunc(scroller, isViewport, direction)(), direction, _getScrollFunc(scroller, direction)(), 0, 0, 0, _getOffsetsFunc(scroller, isViewport)(), isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0, 0, containerAnimation ? containerAnimation.duration() : _maxScroll(scroller), containerAnimation);\n\t// },\n\t_parsePosition = (value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, useFixedPosition, scrollerMax, containerAnimation, clampZeroProp) => {\n\t\t_isFunction(value) && (value = value(self));\n\t\tif (_isString(value) && value.substr(0,3) === \"max\") {\n\t\t\tvalue = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n\t\t}\n\t\tlet time = containerAnimation ? containerAnimation.time() : 0,\n\t\t\tp1, p2, element;\n\t\tcontainerAnimation && containerAnimation.seek(0);\n\t\tisNaN(value) || (value = +value); // convert a string number like \"45\" to an actual number\n\t\tif (!_isNumber(value)) {\n\t\t\t_isFunction(trigger) && (trigger = trigger(self));\n\t\t\tlet offsets = (value || \"0\").split(\" \"),\n\t\t\t\tbounds, localOffset, globalOffset, display;\n\t\t\telement = _getTarget(trigger, self) || _body;\n\t\t\tbounds = _getBounds(element) || {};\n\t\t\tif ((!bounds || (!bounds.left && !bounds.top)) && _getComputedStyle(element).display === \"none\") { // if display is \"none\", it won't report getBoundingClientRect() properly\n\t\t\t\tdisplay = element.style.display;\n\t\t\t\telement.style.display = \"block\";\n\t\t\t\tbounds = _getBounds(element);\n\t\t\t\tdisplay ? (element.style.display = display) : element.style.removeProperty(\"display\");\n\t\t\t}\n\t\t\tlocalOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n\t\t\tglobalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n\t\t\tvalue = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n\t\t\tmarkerScroller && _positionMarker(markerScroller, globalOffset, direction, (scrollerSize - globalOffset < 20 || (markerScroller._isStart && globalOffset > 20)));\n\t\t\tscrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n\t\t} else {\n\t\t\tcontainerAnimation && (value = gsap.utils.mapRange(containerAnimation.scrollTrigger.start, containerAnimation.scrollTrigger.end, 0, scrollerMax, value));\n\t\t\tmarkerScroller && _positionMarker(markerScroller, scrollerSize, direction, true);\n\t\t}\n\t\tif (clampZeroProp) {\n\t\t\tself[clampZeroProp] = value || -0.001;\n\t\t\tvalue < 0 && (value = 0);\n\t\t}\n\t\tif (marker) {\n\t\t\tlet position = value + scrollerSize,\n\t\t\t\tisStart = marker._isStart;\n\t\t\tp1 = \"scroll\" + direction.d2;\n\t\t\t_positionMarker(marker, position, direction, (isStart && position > 20) || (!isStart && (useFixedPosition ? Math.max(_body[p1], _docEl[p1]) : marker.parentNode[p1]) <= position + 1));\n\t\t\tif (useFixedPosition) {\n\t\t\t\tscrollerBounds = _getBounds(markerScroller);\n\t\t\t\tuseFixedPosition && (marker.style[direction.op.p] = (scrollerBounds[direction.op.p] - direction.op.m - marker._offset) + _px);\n\t\t\t}\n\t\t}\n\t\tif (containerAnimation && element) {\n\t\t\tp1 = _getBounds(element);\n\t\t\tcontainerAnimation.seek(scrollerMax);\n\t\t\tp2 = _getBounds(element);\n\t\t\tcontainerAnimation._caScrollDist = p1[direction.p] - p2[direction.p];\n\t\t\tvalue = value / (containerAnimation._caScrollDist) * scrollerMax;\n\t\t}\n\t\tcontainerAnimation && containerAnimation.seek(time);\n\t\treturn containerAnimation ? value : Math.round(value);\n\t},\n\t_prefixExp = /(webkit|moz|length|cssText|inset)/i,\n\t_reparent = (element, parent, top, left) => {\n\t\tif (element.parentNode !== parent) {\n\t\t\tlet style = element.style,\n\t\t\t\tp, cs;\n\t\t\tif (parent === _body) {\n\t\t\t\telement._stOrig = style.cssText; // record original inline styles so we can revert them later\n\t\t\t\tcs = _getComputedStyle(element);\n\t\t\t\tfor (p in cs) { // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n\t\t\t\t\tif (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n\t\t\t\t\t\tstyle[p] = cs[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.top = top;\n\t\t\t\tstyle.left = left;\n\t\t\t} else {\n\t\t\t\tstyle.cssText = element._stOrig;\n\t\t\t}\n\t\t\tgsap.core.getCache(element).uncache = 1;\n\t\t\tparent.appendChild(element);\n\t\t}\n\t},\n\t_interruptionTracker = (getValueFunc, initialValue, onInterrupt) => {\n\t\tlet last1 = initialValue,\n\t\t\tlast2 = last1;\n\t\treturn value => {\n\t\t\tlet current = Math.round(getValueFunc()); // round because in some [very uncommon] Windows environments, scroll can get reported with decimals even though it was set without.\n\t\t\tif (current !== last1 && current !== last2 && Math.abs(current - last1) > 3 && Math.abs(current - last2) > 3) { // if the user scrolls, kill the tween. iOS Safari intermittently misreports the scroll position, it may be the most recently-set one or the one before that! When Safari is zoomed (CMD-+), it often misreports as 1 pixel off too! So if we set the scroll position to 125, for example, it'll actually report it as 124.\n\t\t\t\tvalue = current;\n\t\t\t\tonInterrupt && onInterrupt();\n\t\t\t}\n\t\t\tlast2 = last1;\n\t\t\tlast1 = value;\n\t\t\treturn value;\n\t\t};\n\t},\n\t_shiftMarker = (marker, direction, value) => {\n\t\tlet vars = {};\n\t\tvars[direction.p] = \"+=\" + value;\n\t\tgsap.set(marker, vars);\n\t},\n\t// _mergeAnimations = animations => {\n\t// \tlet tl = gsap.timeline({smoothChildTiming: true}).startTime(Math.min(...animations.map(a => a.globalTime(0))));\n\t// \tanimations.forEach(a => {let time = a.totalTime(); tl.add(a); a.totalTime(time); });\n\t// \ttl.smoothChildTiming = false;\n\t// \treturn tl;\n\t// },\n\n\t// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n\t_getTweenCreator = (scroller, direction) => {\n\t\tlet getScroll = _getScrollFunc(scroller, direction),\n\t\t\tprop = \"_scroll\" + direction.p2, // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n\t\t\tgetTween = (scrollTo, vars, initialValue, change1, change2) => {\n\t\t\t\tlet tween = getTween.tween,\n\t\t\t\t\tonComplete = vars.onComplete,\n\t\t\t\t\tmodifiers = {};\n\t\t\t\tinitialValue = initialValue || getScroll();\n\t\t\t\tlet checkForInterruption = _interruptionTracker(getScroll, initialValue, () => {\n\t\t\t\t\ttween.kill();\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t})\n\t\t\t\tchange2 = (change1 && change2) || 0; // if change1 is 0, we set that to the difference and ignore change2. Otherwise, there would be a compound effect.\n\t\t\t\tchange1 = change1 || (scrollTo - initialValue);\n\t\t\t\ttween && tween.kill();\n\t\t\t\tvars[prop] = scrollTo;\n\t\t\t\tvars.inherit = false;\n\t\t\t\tvars.modifiers = modifiers;\n\t\t\t\tmodifiers[prop] = () => checkForInterruption(initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio);\n\t\t\t\tvars.onUpdate = () => {\n\t\t\t\t\t_scrollers.cache++;\n\t\t\t\t\tgetTween.tween && _updateAll(); // if it was interrupted/killed, like in a context.revert(), don't force an updateAll()\n\t\t\t\t};\n\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\tonComplete && onComplete.call(tween);\n\t\t\t\t};\n\t\t\t\ttween = getTween.tween = gsap.to(scroller, vars);\n\t\t\t\treturn tween;\n\t\t\t};\n\t\tscroller[prop] = getScroll;\n\t\tgetScroll.wheelHandler = () => getTween.tween && getTween.tween.kill() && (getTween.tween = 0);\n\t\t_addListener(scroller, \"wheel\", getScroll.wheelHandler); // Windows machines handle mousewheel scrolling in chunks (like \"3 lines per scroll\") meaning the typical strategy for cancelling the scroll isn't as sensitive. It's much more likely to match one of the previous 2 scroll event positions. So we kill any snapping as soon as there's a wheel event.\n\t\tScrollTrigger.isTouch && _addListener(scroller, \"touchmove\", getScroll.wheelHandler);\n\t\treturn getTween;\n\t};\n\n\n\n\nexport class ScrollTrigger {\n\n\tconstructor(vars, animation) {\n\t\t_coreInitted || ScrollTrigger.register(gsap) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n\t\t_context(this);\n\t\tthis.init(vars, animation);\n\t}\n\n\tinit(vars, animation) {\n\t\tthis.progress = this.start = 0;\n\t\tthis.vars && this.kill(true, true); // in case it's being initted again\n\t\tif (!_enabled) {\n\t\t\tthis.update = this.refresh = this.kill = _passThrough;\n\t\t\treturn;\n\t\t}\n\t\tvars = _setDefaults((_isString(vars) || _isNumber(vars) || vars.nodeType) ? {trigger: vars} : vars, _defaults);\n\t\tlet {onUpdate, toggleClass, id, onToggle, onRefresh, scrub, trigger, pin, pinSpacing, invalidateOnRefresh, anticipatePin, onScrubComplete, onSnapComplete, once, snap, pinReparent, pinSpacer, containerAnimation, fastScrollEnd, preventOverlaps} = vars,\n\t\t\tdirection = vars.horizontal || (vars.containerAnimation && vars.horizontal !== false) ? _horizontal : _vertical,\n\t\t\tisToggle = !scrub && scrub !== 0,\n\t\t\tscroller = _getTarget(vars.scroller || _win),\n\t\t\tscrollerCache = gsap.core.getCache(scroller),\n\t\t\tisViewport = _isViewport(scroller),\n\t\t\tuseFixedPosition = (\"pinType\" in vars ? vars.pinType : _getProxyProp(scroller, \"pinType\") || (isViewport && \"fixed\")) === \"fixed\",\n\t\t\tcallbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n\t\t\ttoggleActions = isToggle && vars.toggleActions.split(\" \"),\n\t\t\tmarkers = \"markers\" in vars ? vars.markers : _defaults.markers,\n\t\t\tborderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n\t\t\tself = this,\n\t\t\tonRefreshInit = vars.onRefreshInit && (() => vars.onRefreshInit(self)),\n\t\t\tgetScrollerSize = _getSizeFunc(scroller, isViewport, direction),\n\t\t\tgetScrollerOffsets = _getOffsetsFunc(scroller, isViewport),\n\t\t\tlastSnap = 0,\n\t\t\tlastRefresh = 0,\n\t\t\tprevProgress = 0,\n\t\t\tscrollFunc = _getScrollFunc(scroller, direction),\n\t\t\ttweenTo, pinCache, snapFunc, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars, executingOnRefresh,\n\t\t\tchange, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, pinChange, spacingStart, spacerState, markerStartSetter, pinMoves,\n\t\t\tmarkerEndSetter, cs, snap1, snap2, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, prevScroll, prevAnimProgress, caMarkerSetter, customRevertReturn;\n\n\t\t// for the sake of efficiency, _startClamp/_endClamp serve like a truthy value indicating that clamping was enabled on the start/end, and ALSO store the actual pre-clamped numeric value. We tap into that in ScrollSmoother for speed effects. So for example, if start=\"clamp(top bottom)\" results in a start of -100 naturally, it would get clamped to 0 but -100 would be stored in _startClamp.\n\t\tself._startClamp = self._endClamp = false;\n\t\tself._dir = direction;\n\t\tanticipatePin *= 45;\n\t\tself.scroller = scroller;\n\t\tself.scroll = containerAnimation ? containerAnimation.time.bind(containerAnimation) : scrollFunc;\n\t\tscroll1 = scrollFunc();\n\t\tself.vars = vars;\n\t\tanimation = animation || vars.animation;\n\t\tif (\"refreshPriority\" in vars) {\n\t\t\t_sort = 1;\n\t\t\tvars.refreshPriority === -9999 && (_primary = self); // used by ScrollSmoother\n\t\t}\n\t\tscrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n\t\t\ttop: _getTweenCreator(scroller, _vertical),\n\t\t\tleft: _getTweenCreator(scroller, _horizontal)\n\t\t};\n\t\tself.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\t\tself.scrubDuration = value => {\n\t\t\tscrubSmooth = _isNumber(value) && value;\n\t\t\tif (!scrubSmooth) {\n\t\t\t\tscrubTween && scrubTween.progress(1).kill();\n\t\t\t\tscrubTween = 0;\n\t\t\t} else {\n\t\t\t\tscrubTween ? scrubTween.duration(value) : (scrubTween = gsap.to(animation, {ease: \"expo\", totalProgress: \"+=0\", inherit: false, duration: scrubSmooth, paused: true, onComplete: () => onScrubComplete && onScrubComplete(self)}));\n\t\t\t}\n\t\t};\n\t\tif (animation) {\n\t\t\tanimation.vars.lazy = false;\n\t\t\t(animation._initted && !self.isReverted) || (animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.duration() && animation.render(0, true, true)); // special case: if this ScrollTrigger gets re-initted, a from() tween with a stagger could get initted initially and then reverted on the re-init which means it'll need to get rendered again here to properly display things. Otherwise, See https://gsap.com/forums/topic/36777-scrollsmoother-splittext-nextjs/ and https://codepen.io/GreenSock/pen/eYPyPpd?editors=0010\n\t\t\tself.animation = animation.pause();\n\t\t\tanimation.scrollTrigger = self;\n\t\t\tself.scrubDuration(scrub);\n\t\t\tsnap1 = 0;\n\t\t\tid || (id = animation.vars.id);\n\t\t}\n\n\t\tif (snap) {\n\t\t\t// TODO: potential idea: use legitimate CSS scroll snapping by pushing invisible elements into the DOM that serve as snap positions, and toggle the document.scrollingElement.style.scrollSnapType onToggle. See https://codepen.io/GreenSock/pen/JjLrgWM for a quick proof of concept.\n\t\t\tif (!_isObject(snap) || snap.push) {\n\t\t\t\tsnap = {snapTo: snap};\n\t\t\t}\n\t\t\t(\"scrollBehavior\" in _body.style) && gsap.set(isViewport ? [_body, _docEl] : scroller, {scrollBehavior: \"auto\"}); // smooth scrolling doesn't work with snap.\n\t\t\t_scrollers.forEach(o => _isFunction(o) && o.target === (isViewport ? _doc.scrollingElement || _docEl : scroller) && (o.smooth = false)); // note: set smooth to false on both the vertical and horizontal scroll getters/setters\n\t\t\tsnapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getClosestLabel(animation) : snap.snapTo === \"labelsDirectional\" ? _getLabelAtDirection(animation) : snap.directional !== false ? (value, st) => _snapDirectional(snap.snapTo)(value, _getTime() - lastRefresh < 500 ? 0 : st.direction) : gsap.utils.snap(snap.snapTo);\n\t\t\tsnapDurClamp = snap.duration || {min: 0.1, max: 2};\n\t\t\tsnapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n\t\t\tsnapDelayedCall = gsap.delayedCall(snap.delay || (scrubSmooth / 2) || 0.1, () => {\n\t\t\t\tlet scroll = scrollFunc(),\n\t\t\t\t\trefreshedRecently = _getTime() - lastRefresh < 500,\n\t\t\t\t\ttween = tweenTo.tween;\n\t\t\t\tif ((refreshedRecently || Math.abs(self.getVelocity()) < 10) && !tween && !_pointerIsDown && lastSnap !== scroll) {\n\t\t\t\t\tlet progress = (scroll - start) / change, // don't use self.progress because this might run between the refresh() and when the scroll position updates and self.progress is set properly in the update() method.\n\t\t\t\t\t\ttotalProgress = animation && !isToggle ? animation.totalProgress() : progress,\n\t\t\t\t\t\tvelocity = refreshedRecently ? 0 : ((totalProgress - snap2) / (_getTime() - _time2) * 1000) || 0,\n\t\t\t\t\t\tchange1 = gsap.utils.clamp(-progress, 1 - progress, _abs(velocity / 2) * velocity / 0.185),\n\t\t\t\t\t\tnaturalEnd = progress + (snap.inertia === false ? 0 : change1),\n\t\t\t\t\t\tendValue, endScroll,\n\t\t\t\t\t\t{ onStart, onInterrupt, onComplete } = snap;\n\t\t\t\t\tendValue = snapFunc(naturalEnd, self);\n\t\t\t\t\t_isNumber(endValue) || (endValue = naturalEnd); // in case the function didn't return a number, fall back to using the naturalEnd\n\t\t\t\t\tendScroll = Math.round(start + endValue * change);\n\t\t\t\t\tif (scroll <= end && scroll >= start && endScroll !== scroll) {\n\t\t\t\t\t\tif (tween && !tween._initted && tween.data <= _abs(endScroll - scroll)) { // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (snap.inertia === false) {\n\t\t\t\t\t\t\tchange1 = endValue - progress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweenTo(endScroll, {\n\t\t\t\t\t\t\tduration: snapDurClamp(_abs( (Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05) || 0)),\n\t\t\t\t\t\t\tease: snap.ease || \"power3\",\n\t\t\t\t\t\t\tdata: _abs(endScroll - scroll), // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n\t\t\t\t\t\t\tonInterrupt: () => snapDelayedCall.restart(true) && onInterrupt && onInterrupt(self),\n\t\t\t\t\t\t\tonComplete() {\n\t\t\t\t\t\t\t\tself.update();\n\t\t\t\t\t\t\t\tlastSnap = scrollFunc();\n\t\t\t\t\t\t\t\tif (animation) { // the resolution of the scrollbar is limited, so we should correct the scrubbed animation's playhead at the end to match EXACTLY where it was supposed to snap\n\t\t\t\t\t\t\t\t\tscrubTween ? scrubTween.resetTo(\"totalProgress\", endValue, animation._tTime / animation._tDur) : animation.progress(endValue);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsnap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n\t\t\t\t\t\t\t\tonSnapComplete && onSnapComplete(self);\n\t\t\t\t\t\t\t\tonComplete && onComplete(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, scroll, change1 * change, endScroll - scroll - change1 * change);\n\t\t\t\t\t\tonStart && onStart(self, tweenTo.tween);\n\t\t\t\t\t}\n\t\t\t\t} else if (self.isActive && lastSnap !== scroll) {\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t}).pause();\n\t\t}\n\t\tid && (_ids[id] = self);\n\t\ttrigger = self.trigger = _getTarget(trigger || (pin !== true && pin));\n\n\t\t// if a trigger has some kind of scroll-related effect applied that could contaminate the \"y\" or \"x\" position (like a ScrollSmoother effect), we needed a way to temporarily revert it, so we use the stRevert property of the gsCache. It can return another function that we'll call at the end so it can return to its normal state.\n\t\tcustomRevertReturn = trigger && trigger._gsap && trigger._gsap.stRevert;\n\t\tcustomRevertReturn && (customRevertReturn = customRevertReturn(self));\n\n\t\tpin = pin === true ? trigger : _getTarget(pin);\n\t\t_isString(toggleClass) && (toggleClass = {targets: trigger, className: toggleClass});\n\t\tif (pin) {\n\t\t\t(pinSpacing === false || pinSpacing === _margin) || (pinSpacing = !pinSpacing && pin.parentNode && pin.parentNode.style && _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default. We should check that pin.parentNode is an element (not shadow dom window)\n\t\t\tself.pin = pin;\n\t\t\tpinCache = gsap.core.getCache(pin);\n\t\t\tif (!pinCache.spacer) { // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n\t\t\t\tif (pinSpacer) {\n\t\t\t\t\tpinSpacer = _getTarget(pinSpacer);\n\t\t\t\t\tpinSpacer && !pinSpacer.nodeType && (pinSpacer = pinSpacer.current || pinSpacer.nativeElement); // for React & Angular\n\t\t\t\t\tpinCache.spacerIsNative = !!pinSpacer;\n\t\t\t\t\tpinSpacer && (pinCache.spacerState = _getState(pinSpacer));\n\t\t\t\t}\n\t\t\t\tpinCache.spacer = spacer = pinSpacer || _doc.createElement(\"div\");\n\t\t\t\tspacer.classList.add(\"pin-spacer\");\n\t\t\t\tid && spacer.classList.add(\"pin-spacer-\" + id);\n\t\t\t\tpinCache.pinState = pinOriginalState = _getState(pin);\n\t\t\t} else {\n\t\t\t\tpinOriginalState = pinCache.pinState;\n\t\t\t}\n\t\t\tvars.force3D !== false && gsap.set(pin, {force3D: true});\n\t\t\tself.spacer = spacer = pinCache.spacer;\n\t\t\tcs = _getComputedStyle(pin);\n\t\t\tspacingStart = cs[pinSpacing + direction.os2];\n\t\t\tpinGetter = gsap.getProperty(pin);\n\t\t\tpinSetter = gsap.quickSetter(pin, direction.a, _px);\n\t\t\t// pin.firstChild && !_maxScroll(pin, direction) && (pin.style.overflow = \"hidden\"); // protects from collapsing margins, but can have unintended consequences as demonstrated here: https://codepen.io/GreenSock/pen/1e42c7a73bfa409d2cf1e184e7a4248d so it was removed in favor of just telling people to set up their CSS to avoid the collapsing margins (overflow: hidden | auto is just one option. Another is border-top: 1px solid transparent).\n\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\tpinState = _getState(pin);\n\t\t}\n\t\tif (markers) {\n\t\t\tmarkerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n\t\t\tmarkerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n\t\t\tmarkerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n\t\t\toffset = markerStartTrigger[\"offset\" + direction.op.d2];\n\t\t\tlet content = _getTarget(_getProxyProp(scroller, \"content\") || scroller);\n\t\t\tmarkerStart = this.markerStart = _createMarker(\"start\", id, content, direction, markerVars, offset, 0, containerAnimation);\n\t\t\tmarkerEnd = this.markerEnd = _createMarker(\"end\", id, content, direction, markerVars, offset, 0, containerAnimation);\n\t\t\tcontainerAnimation && (caMarkerSetter = gsap.quickSetter([markerStart, markerEnd], direction.a, _px));\n\t\t\tif ((!useFixedPosition && !(_proxies.length && _getProxyProp(scroller, \"fixedMarkers\") === true))) {\n\t\t\t\t_makePositionable(isViewport ? _body : scroller);\n\t\t\t\tgsap.set([markerStartTrigger, markerEndTrigger], {force3D: true});\n\t\t\t\tmarkerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n\t\t\t\tmarkerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n\t\t\t}\n\t\t}\n\n\t\tif (containerAnimation) {\n\t\t\tlet oldOnUpdate = containerAnimation.vars.onUpdate,\n\t\t\t\toldParams = containerAnimation.vars.onUpdateParams;\n\t\t\tcontainerAnimation.eventCallback(\"onUpdate\", () => {\n\t\t\t\tself.update(0, 0, 1);\n\t\t\t\toldOnUpdate && oldOnUpdate.apply(containerAnimation, oldParams || []);\n\t\t\t});\n\t\t}\n\n\t\tself.previous = () => _triggers[_triggers.indexOf(self) - 1];\n\t\tself.next = () => _triggers[_triggers.indexOf(self) + 1];\n\n\t\tself.revert = (revert, temp) => {\n\t\t\tif (!temp) { return self.kill(true); } // for compatibility with gsap.context() and gsap.matchMedia() which call revert()\n\t\t\tlet r = revert !== false || !self.enabled,\n\t\t\t\tprevRefreshing = _refreshing;\n\t\t\tif (r !== self.isReverted) {\n\t\t\t\tif (r) {\n\t\t\t\t\tprevScroll = Math.max(scrollFunc(), self.scroll.rec || 0); // record the scroll so we can revert later (repositioning/pinning things can affect scroll position). In the static refresh() method, we first record all the scroll positions as a reference.\n\t\t\t\t\tprevProgress = self.progress;\n\t\t\t\t\tprevAnimProgress = animation && animation.progress();\n\t\t\t\t}\n\t\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.style.display = r ? \"none\" : \"block\");\n\t\t\t\tif (r) {\n\t\t\t\t\t_refreshing = self;\n\t\t\t\t\tself.update(r); // make sure the pin is back in its original position so that all the measurements are correct. do this BEFORE swapping the pin out\n\t\t\t\t}\n\t\t\t\tif (pin && (!pinReparent || !self.isActive)) {\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\t_swapPinOut(pin, spacer, pinOriginalState);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tr || self.update(r); // when we're restoring, the update should run AFTER swapping the pin into its pin-spacer.\n\t\t\t\t_refreshing = prevRefreshing; // restore. We set it to true during the update() so that things fire properly in there.\n\t\t\t\tself.isReverted = r;\n\t\t\t}\n\t\t}\n\n\t\tself.refresh = (soft, force, position, pinOffset) => { // position is typically only defined if it's coming from setPositions() - it's a way to skip the normal parsing. pinOffset is also only from setPositions() and is mostly related to fancy stuff we need to do in ScrollSmoother with effects\n\t\t\tif ((_refreshing || !self.enabled) && !force) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pin && soft && _lastScrollTime) {\n\t\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t!_refreshingAll && onRefreshInit && onRefreshInit(self);\n\t\t\t_refreshing = self;\n\t\t\tif (tweenTo.tween && !position) { // we skip this if a position is passed in because typically that's from .setPositions() and it's best to allow in-progress snapping to continue.\n\t\t\t\ttweenTo.tween.kill();\n\t\t\t\ttweenTo.tween = 0;\n\t\t\t}\n\t\t\tscrubTween && scrubTween.pause();\n\t\t\tinvalidateOnRefresh && animation && animation.revert({kill: false}).invalidate();\n\t\t\tself.isReverted || self.revert(true, true);\n\t\t\tself._subPinOffset = false; // we'll set this to true in the sub-pins if we find any\n\t\t\tlet size = getScrollerSize(),\n\t\t\t\tscrollerBounds = getScrollerOffsets(),\n\t\t\t\tmax = containerAnimation ? containerAnimation.duration() : _maxScroll(scroller, direction),\n\t\t\t\tisFirstRefresh = change <= 0.01,\n\t\t\t\toffset = 0,\n\t\t\t\totherPinOffset = pinOffset || 0,\n\t\t\t\tparsedEnd = _isObject(position) ? position.end : vars.end,\n\t\t\t\tparsedEndTrigger = vars.endTrigger || trigger,\n\t\t\t\tparsedStart = _isObject(position) ? position.start : (vars.start || (vars.start === 0 || !trigger ? 0 : (pin ? \"0 0\" : \"0 100%\"))),\n\t\t\t\tpinnedContainer = self.pinnedContainer = vars.pinnedContainer && _getTarget(vars.pinnedContainer, self),\n\t\t\t\ttriggerIndex = (trigger && Math.max(0, _triggers.indexOf(self))) || 0,\n\t\t\t\ti = triggerIndex,\n\t\t\t\tcs, bounds, scroll, isVertical, override, curTrigger, curPin, oppositeScroll, initted, revertedPins, forcedOverflow, markerStartOffset, markerEndOffset;\n\t\t\tif (markers && _isObject(position)) { // if we alter the start/end positions with .setPositions(), it generally feeds in absolute NUMBERS which don't convey information about where to line up the markers, so to keep it intuitive, we record how far the trigger positions shift after applying the new numbers and then offset by that much in the opposite direction. We do the same to the associated trigger markers too of course.\n\t\t\t\tmarkerStartOffset = gsap.getProperty(markerStartTrigger, direction.p);\n\t\t\t\tmarkerEndOffset = gsap.getProperty(markerEndTrigger, direction.p);\n\t\t\t}\n\t\t\twhile (i--) { // user might try to pin the same element more than once, so we must find any prior triggers with the same pin, revert them, and determine how long they're pinning so that we can offset things appropriately. Make sure we revert from last to first so that things \"rewind\" properly.\n\t\t\t\tcurTrigger = _triggers[i];\n\t\t\t\tcurTrigger.end || curTrigger.refresh(0, 1) || (_refreshing = self); // if it's a timeline-based trigger that hasn't been fully initialized yet because it's waiting for 1 tick, just force the refresh() here, otherwise if it contains a pin that's supposed to affect other ScrollTriggers further down the page, they won't be adjusted properly.\n\t\t\t\tcurPin = curTrigger.pin;\n\t\t\t\tif (curPin && (curPin === trigger || curPin === pin || curPin === pinnedContainer) && !curTrigger.isReverted) {\n\t\t\t\t\trevertedPins || (revertedPins = []);\n\t\t\t\t\trevertedPins.unshift(curTrigger); // we'll revert from first to last to make sure things reach their end state properly\n\t\t\t\t\tcurTrigger.revert(true, true);\n\t\t\t\t}\n\t\t\t\tif (curTrigger !== _triggers[i]) { // in case it got removed.\n\t\t\t\t\ttriggerIndex--;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_isFunction(parsedStart) && (parsedStart = parsedStart(self));\n\t\t\tparsedStart = _parseClamp(parsedStart, \"start\", self);\n\t\t\tstart = _parsePosition(parsedStart, trigger, size, direction, scrollFunc(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation, self._startClamp && \"_startClamp\") || (pin ? -0.001 : 0);\n\t\t\t_isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\t\t\tif (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n\t\t\t\tif (~parsedEnd.indexOf(\" \")) {\n\t\t\t\t\tparsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n\t\t\t\t} else {\n\t\t\t\t\toffset = _offsetToPx(parsedEnd.substr(2), size);\n\t\t\t\t\tparsedEnd = _isString(parsedStart) ? parsedStart : (containerAnimation ? gsap.utils.mapRange(0, containerAnimation.duration(), containerAnimation.scrollTrigger.start, containerAnimation.scrollTrigger.end, start) : start) + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\t\t\t\t\tparsedEndTrigger = trigger;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparsedEnd = _parseClamp(parsedEnd, \"end\", self);\n\t\t\tend = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, scrollFunc() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation, self._endClamp && \"_endClamp\")) || -0.001;\n\n\t\t\toffset = 0;\n\t\t\ti = triggerIndex;\n\t\t\twhile (i--) {\n\t\t\t\tcurTrigger = _triggers[i];\n\t\t\t\tcurPin = curTrigger.pin;\n\t\t\t\tif (curPin && curTrigger.start - curTrigger._pinPush <= start && !containerAnimation && curTrigger.end > 0) {\n\t\t\t\t\tcs = curTrigger.end - (self._startClamp ? Math.max(0, curTrigger.start) : curTrigger.start);\n\t\t\t\t\tif (((curPin === trigger && curTrigger.start - curTrigger._pinPush < start) || curPin === pinnedContainer) && isNaN(parsedStart)) { // numeric start values shouldn't be offset at all - treat them as absolute\n\t\t\t\t\t\toffset += cs * (1 - curTrigger.progress);\n\t\t\t\t\t}\n\t\t\t\t\tcurPin === pin && (otherPinOffset += cs);\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart += offset;\n\t\t\tend += offset;\n\t\t\tself._startClamp && (self._startClamp += offset);\n\n\t\t\tif (self._endClamp && !_refreshingAll) {\n\t\t\t\tself._endClamp = end || -0.001;\n\t\t\t\tend = Math.min(end, _maxScroll(scroller, direction));\n\t\t\t}\n\t\t\tchange = (end - start) || ((start -= 0.01) && 0.001);\n\n\t\t\tif (isFirstRefresh) { // on the very first refresh(), the prevProgress couldn't have been accurate yet because the start/end were never calculated, so we set it here. Before 3.11.5, it could lead to an inaccurate scroll position restoration with snapping.\n\t\t\t\tprevProgress = gsap.utils.clamp(0, 1, gsap.utils.normalize(start, end, prevScroll));\n\t\t\t}\n\t\t\tself._pinPush = otherPinOffset;\n\t\t\tif (markerStart && offset) { // offset the markers if necessary\n\t\t\t\tcs = {};\n\t\t\t\tcs[direction.a] = \"+=\" + offset;\n\t\t\t\tpinnedContainer && (cs[direction.p] = \"-=\" + scrollFunc());\n\t\t\t\tgsap.set([markerStart, markerEnd], cs);\n\t\t\t}\n\n\t\t\tif (pin && !(_clampingMax && self.end >= _maxScroll(scroller, direction))) {\n\t\t\t\tcs = _getComputedStyle(pin);\n\t\t\t\tisVertical = direction === _vertical;\n\t\t\t\tscroll = scrollFunc(); // recalculate because the triggers can affect the scroll\n\t\t\t\tpinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;\n\t\t\t\tif (!max && end > 1) { // makes sure the scroller has a scrollbar, otherwise if something has width: 100%, for example, it would be too big (exclude the scrollbar). See https://gsap.com/forums/topic/25182-scrolltrigger-width-of-page-increase-where-markers-are-set-to-false/\n\t\t\t\t\tforcedOverflow = (isViewport ? (_doc.scrollingElement || _docEl) : scroller).style;\n\t\t\t\t\tforcedOverflow = {style: forcedOverflow, value: forcedOverflow[\"overflow\" + direction.a.toUpperCase()]};\n\t\t\t\t\tif (isViewport && _getComputedStyle(_body)[\"overflow\" + direction.a.toUpperCase()] !== \"scroll\") { // avoid an extra scrollbar if BOTH <html> and <body> have overflow set to \"scroll\"\n\t\t\t\t\t\tforcedOverflow.style[\"overflow\" + direction.a.toUpperCase()] = \"scroll\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\t\tpinState = _getState(pin);\n\t\t\t\t// transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\t\t\t\tbounds = _getBounds(pin, true);\n\t\t\t\toppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();\n\t\t\t\tif (pinSpacing) {\n\t\t\t\t\tspacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];\n\t\t\t\t\tspacerState.t = spacer;\n\t\t\t\t\ti = (pinSpacing === _padding) ? _getSize(pin, direction) + change + otherPinOffset : 0;\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\tspacerState.push(direction.d, i + _px); // for box-sizing: border-box (must include padding).\n\t\t\t\t\t\tspacer.style.flexBasis !== \"auto\" && (spacer.style.flexBasis = i + _px);\n\t\t\t\t\t}\n\t\t\t\t\t_setState(spacerState);\n\t\t\t\t\tif (pinnedContainer) { // in ScrollTrigger.refresh(), we need to re-evaluate the pinContainer's size because this pinSpacing may stretch it out, but we can't just add the exact distance because depending on layout, it may not push things down or it may only do so partially.\n\t\t\t\t\t\t_triggers.forEach(t => {\n\t\t\t\t\t\t\tif (t.pin === pinnedContainer && t.vars.pinSpacing !== false) {\n\t\t\t\t\t\t\t\tt._subPinOffset = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tuseFixedPosition && scrollFunc(prevScroll);\n\t\t\t\t} else {\n\t\t\t\t\ti = _getSize(pin, direction);\n\t\t\t\t\ti && spacer.style.flexBasis !== \"auto\" && (spacer.style.flexBasis = i + _px);\n\t\t\t\t}\n\t\t\t\tif (useFixedPosition) {\n\t\t\t\t\toverride = {\n\t\t\t\t\t\ttop: (bounds.top + (isVertical ? scroll - start : oppositeScroll)) + _px,\n\t\t\t\t\t\tleft: (bounds.left + (isVertical ? oppositeScroll : scroll - start)) + _px,\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tposition: \"fixed\"\n\t\t\t\t\t};\n\t\t\t\t\toverride[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n\t\t\t\t\toverride[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n\t\t\t\t\toverride[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n\t\t\t\t\toverride[_padding] = cs[_padding];\n\t\t\t\t\toverride[_padding + _Top] = cs[_padding + _Top];\n\t\t\t\t\toverride[_padding + _Right] = cs[_padding + _Right];\n\t\t\t\t\toverride[_padding + _Bottom] = cs[_padding + _Bottom];\n\t\t\t\t\toverride[_padding + _Left] = cs[_padding + _Left];\n\t\t\t\t\tpinActiveState = _copyState(pinOriginalState, override, pinReparent);\n\t\t\t\t\t_refreshingAll && scrollFunc(0);\n\t\t\t\t}\n\t\t\t\tif (animation) { // the animation might be affecting the transform, so we must jump to the end, check the value, and compensate accordingly. Otherwise, when it becomes unpinned, the pinSetter() will get set to a value that doesn't include whatever the animation did.\n\t\t\t\t\tinitted = animation._initted; // if not, we must invalidate() after this step, otherwise it could lock in starting values prematurely.\n\t\t\t\t\t_suppressOverwrites(1);\n\t\t\t\t\tanimation.render(animation.duration(), true, true);\n\t\t\t\t\tpinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;\n\t\t\t\t\tpinMoves = Math.abs(change - pinChange) > 1;\n\t\t\t\t\tuseFixedPosition && pinMoves && pinActiveState.splice(pinActiveState.length - 2, 2); // transform is the last property/value set in the state Array. Since the animation is controlling that, we should omit it.\n\t\t\t\t\tanimation.render(0, true, true);\n\t\t\t\t\tinitted || animation.invalidate(true);\n\t\t\t\t\tanimation.parent || animation.totalTime(animation.totalTime()); // if, for example, a toggleAction called play() and then refresh() happens and when we render(1) above, it would cause the animation to complete and get removed from its parent, so this makes sure it gets put back in.\n\t\t\t\t\t_suppressOverwrites(0);\n\t\t\t\t} else {\n\t\t\t\t\tpinChange = change\n\t\t\t\t}\n\t\t\t\tforcedOverflow && (forcedOverflow.value ? (forcedOverflow.style[\"overflow\" + direction.a.toUpperCase()] = forcedOverflow.value) : forcedOverflow.style.removeProperty(\"overflow-\" + direction.a));\n\t\t\t} else if (trigger && scrollFunc() && !containerAnimation) { // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n\t\t\t\tbounds = trigger.parentNode;\n\t\t\t\twhile (bounds && bounds !== _body) {\n\t\t\t\t\tif (bounds._pinOffset) {\n\t\t\t\t\t\tstart -= bounds._pinOffset;\n\t\t\t\t\t\tend -= bounds._pinOffset;\n\t\t\t\t\t}\n\t\t\t\t\tbounds = bounds.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\trevertedPins && revertedPins.forEach(t => t.revert(false, true));\n\t\t\tself.start = start;\n\t\t\tself.end = end;\n\t\t\tscroll1 = scroll2 = _refreshingAll ? prevScroll : scrollFunc(); // reset velocity\n\t\t\tif (!containerAnimation && !_refreshingAll) {\n\t\t\t\tscroll1 < prevScroll && scrollFunc(prevScroll);\n\t\t\t\tself.scroll.rec = 0;\n\t\t\t}\n\t\t\tself.revert(false, true);\n\t\t\tlastRefresh = _getTime();\n\t\t\tif (snapDelayedCall) {\n\t\t\t\tlastSnap = -1; // just so snapping gets re-enabled, clear out any recorded last value\n\t\t\t\t// self.isActive && scrollFunc(start + change * prevProgress); // previously this line was here to ensure that when snapping kicks in, it's from the previous progress but in some cases that's not desirable, like an all-page ScrollTrigger when new content gets added to the page, that'd totally change the progress.\n\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t}\n\t\t\t_refreshing = 0;\n\t\t\tanimation && isToggle && (animation._initted || prevAnimProgress) && animation.progress() !== prevAnimProgress && animation.progress(prevAnimProgress || 0, true).render(animation.time(), true, true); // must force a re-render because if saveStyles() was used on the target(s), the styles could have been wiped out during the refresh().\n\t\t\tif (isFirstRefresh || prevProgress !== self.progress || containerAnimation || invalidateOnRefresh) { // ensures that the direction is set properly (when refreshing, progress is set back to 0 initially, then back again to wherever it needs to be) and that callbacks are triggered.\n\t\t\t\tanimation && !isToggle && animation.totalProgress(containerAnimation && start < -0.001 && !prevProgress ? gsap.utils.normalize(start, end, 0) : prevProgress, true); // to avoid issues where animation callbacks like onStart aren't triggered.\n\t\t\t\tself.progress = isFirstRefresh || ((scroll1 - start) / change === prevProgress) ? 0 : prevProgress;\n\t\t\t}\n\t\t\tpin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * pinChange));\n\t\t\tscrubTween && scrubTween.invalidate();\n\n\t\t\tif (!isNaN(markerStartOffset)) { // numbers were passed in for the position which are absolute, so instead of just putting the markers at the very bottom of the viewport, we figure out how far they shifted down (it's safe to assume they were originally positioned in closer relation to the trigger element with values like \"top\", \"center\", a percentage or whatever, so we offset that much in the opposite direction to basically revert them to the relative position thy were at previously.\n\t\t\t\tmarkerStartOffset -= gsap.getProperty(markerStartTrigger, direction.p);\n\t\t\t\tmarkerEndOffset -= gsap.getProperty(markerEndTrigger, direction.p);\n\t\t\t\t_shiftMarker(markerStartTrigger, direction, markerStartOffset);\n\t\t\t\t_shiftMarker(markerStart, direction, markerStartOffset - (pinOffset || 0));\n\t\t\t\t_shiftMarker(markerEndTrigger, direction, markerEndOffset);\n\t\t\t\t_shiftMarker(markerEnd, direction, markerEndOffset - (pinOffset || 0));\n\t\t\t}\n\n\t\t\tisFirstRefresh && !_refreshingAll && self.update(); // edge case - when you reload a page when it's already scrolled down, some browsers fire a \"scroll\" event before DOMContentLoaded, triggering an updateAll(). If we don't update the self.progress as part of refresh(), then when it happens next, it may record prevProgress as 0 when it really shouldn't, potentially causing a callback in an animation to fire again.\n\n\t\t\tif (onRefresh && !_refreshingAll && !executingOnRefresh) { // when refreshing all, we do extra work to correct pinnedContainer sizes and ensure things don't exceed the maxScroll, so we should do all the refreshes at the end after all that work so that the start/end values are corrected.\n\t\t\t\texecutingOnRefresh = true;\n\t\t\t\tonRefresh(self);\n\t\t\t\texecutingOnRefresh = false;\n\t\t\t}\n\t\t};\n\n\t\tself.getVelocity = () => ((scrollFunc() - scroll2) / (_getTime() - _time2) * 1000) || 0;\n\n\t\tself.endAnimation = () => {\n\t\t\t_endAnimation(self.callbackAnimation);\n\t\t\tif (animation) {\n\t\t\t\tscrubTween ? scrubTween.progress(1) : (!animation.paused() ? _endAnimation(animation, animation.reversed()) : isToggle || _endAnimation(animation, self.direction < 0, 1));\n\t\t\t}\n\t\t};\n\n\t\tself.labelToScroll = label => animation && animation.labels && ((start || self.refresh() || start) + (animation.labels[label] / animation.duration()) * change) || 0;\n\n\t\tself.getTrailing = name => {\n\t\t\tlet i = _triggers.indexOf(self),\n\t\t\t\ta = self.direction > 0 ? _triggers.slice(0, i).reverse() : _triggers.slice(i+1);\n\t\t\treturn (_isString(name) ? a.filter(t => t.vars.preventOverlaps === name) : a).filter(t => self.direction > 0 ? t.end <= start : t.start >= end);\n\t\t};\n\n\n\t\tself.update = (reset, recordVelocity, forceFake) => {\n\t\t\tif (containerAnimation && !forceFake && !reset) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet scroll = _refreshingAll === true ? prevScroll : self.scroll(),\n\t\t\t\tp = reset ? 0 : (scroll - start) / change,\n\t\t\t\tclipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n\t\t\t\tprevProgress = self.progress,\n\t\t\t\tisActive, wasActive, toggleState, action, stateChanged, toggled, isAtMax, isTakingAction;\n\t\t\tif (recordVelocity) {\n\t\t\t\tscroll2 = scroll1;\n\t\t\t\tscroll1 = containerAnimation ? scrollFunc() : scroll;\n\t\t\t\tif (snap) {\n\t\t\t\t\tsnap2 = snap1;\n\t\t\t\t\tsnap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\t\t\tif (anticipatePin && pin && !_refreshing && !_startup && _lastScrollTime) {\n\t\t\t\tif (!clipped && start < scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) {\n\t\t\t\t\tclipped = 0.0001;\n\t\t\t\t} else if (clipped === 1 && end > scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) {\n\t\t\t\t\tclipped = 0.9999;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clipped !== prevProgress && self.enabled) {\n\t\t\t\tisActive = self.isActive = !!clipped && clipped < 1;\n\t\t\t\twasActive = !!prevProgress && prevProgress < 1;\n\t\t\t\ttoggled = isActive !== wasActive;\n\t\t\t\tstateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\t\t\t\tself.direction = clipped > prevProgress ? 1 : -1;\n\t\t\t\tself.progress = clipped;\n\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\ttoggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack (we prioritize the FIRST encounter, thus if you scroll really fast past the onEnter and onLeave in one tick, it'd prioritize onEnter.\n\t\t\t\t\tif (isToggle) {\n\t\t\t\t\t\taction = (!toggled && toggleActions[toggleState + 1] !== \"none\" && toggleActions[toggleState + 1]) || toggleActions[toggleState]; // if it didn't toggle, that means it shot right past and since we prioritize the \"enter\" action, we should switch to the \"leave\" in this case (but only if one is defined)\n\t\t\t\t\t\tisTakingAction = animation && (action === \"complete\" || action === \"reset\" || action in animation);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpreventOverlaps && (toggled || isTakingAction) && (isTakingAction || scrub || !animation) && (_isFunction(preventOverlaps) ? preventOverlaps(self) : self.getTrailing(preventOverlaps).forEach(t => t.endAnimation()));\n\n\t\t\t\tif (!isToggle) {\n\t\t\t\t\tif (scrubTween && !_refreshing && !_startup) {\n\t\t\t\t\t\t(scrubTween._dp._time - scrubTween._start !== scrubTween._time) && scrubTween.render(scrubTween._dp._time - scrubTween._start); // if there's a scrub on both the container animation and this one (or a ScrollSmoother), the update order would cause this one not to have rendered yet, so it wouldn't make any progress before we .restart() it heading toward the new progress so it'd appear stuck thus we force a render here.\n\t\t\t\t\t\tif (scrubTween.resetTo) {\n\t\t\t\t\t\t\tscrubTween.resetTo(\"totalProgress\", clipped, animation._tTime / animation._tDur);\n\t\t\t\t\t\t} else { // legacy support (courtesy), before 3.10.0\n\t\t\t\t\t\t\tscrubTween.vars.totalProgress = clipped;\n\t\t\t\t\t\t\tscrubTween.invalidate().restart();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (animation) {\n\t\t\t\t\t\tanimation.totalProgress(clipped, !!(_refreshing && (lastRefresh || reset)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pin) {\n\t\t\t\t\treset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\t\t\t\t\tif (!useFixedPosition) {\n\t\t\t\t\t\tpinSetter(_round(pinStart + pinChange * clipped));\n\t\t\t\t\t} else if (stateChanged) {\n\t\t\t\t\t\tisAtMax = !reset && clipped > prevProgress && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\t\t\t\t\t\tif (pinReparent) {\n\t\t\t\t\t\t\tif (!reset && (isActive || isAtMax)) {\n\t\t\t\t\t\t\t\tlet bounds = _getBounds(pin, true),\n\t\t\t\t\t\t\t\t\toffset = scroll - start;\n\t\t\t\t\t\t\t\t_reparent(pin, _body, (bounds.top + (direction === _vertical ? offset : 0)) + _px, (bounds.left + (direction === _vertical ? 0 : offset)) + _px);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_reparent(pin, spacer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setState(isActive || isAtMax ? pinActiveState : pinState);\n\t\t\t\t\t\t(pinMoves && clipped < 1 && isActive) || pinSetter(pinStart + (clipped === 1 && !isAtMax ? pinChange : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsnap && !tweenTo.tween && !_refreshing && !_startup && snapDelayedCall.restart(true);\n\t\t\t\ttoggleClass && (toggled || (once && clipped && (clipped < 1 || !_limitCallbacks))) && _toArray(toggleClass.targets).forEach(el => el.classList[isActive || once ? \"add\" : \"remove\"](toggleClass.className)); // classes could affect positioning, so do it even if reset or refreshing is true.\n\t\t\t\tonUpdate && !isToggle && !reset && onUpdate(self);\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\tif (isToggle) {\n\t\t\t\t\t\tif (isTakingAction) {\n\t\t\t\t\t\t\tif (action === \"complete\") {\n\t\t\t\t\t\t\t\tanimation.pause().totalProgress(1);\n\t\t\t\t\t\t\t} else if (action === \"reset\") {\n\t\t\t\t\t\t\t\tanimation.restart(true).pause();\n\t\t\t\t\t\t\t} else if (action === \"restart\") {\n\t\t\t\t\t\t\t\tanimation.restart(true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation[action]();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate && onUpdate(self);\n\t\t\t\t\t}\n\t\t\t\t\tif (toggled || !_limitCallbacks) { // on startup, the page could be scrolled and we don't want to fire callbacks that didn't toggle. For example onEnter shouldn't fire if the ScrollTrigger isn't actually entered.\n\t\t\t\t\t\tonToggle && toggled && _callback(self, onToggle);\n\t\t\t\t\t\tcallbacks[toggleState] && _callback(self, callbacks[toggleState]);\n\t\t\t\t\t\tonce && (clipped === 1 ? self.kill(false, 1) : (callbacks[toggleState] = 0)); // a callback shouldn't be called again if once is true.\n\t\t\t\t\t\tif (!toggled) { // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n\t\t\t\t\t\t\ttoggleState = clipped === 1 ? 1 : 3;\n\t\t\t\t\t\t\tcallbacks[toggleState] && _callback(self, callbacks[toggleState]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fastScrollEnd && !isActive && Math.abs(self.getVelocity()) > (_isNumber(fastScrollEnd) ? fastScrollEnd : 2500)) {\n\t\t\t\t\t\t_endAnimation(self.callbackAnimation);\n\t\t\t\t\t\tscrubTween ? scrubTween.progress(1) : _endAnimation(animation, action === \"reverse\" ? 1 : !clipped, 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (isToggle && onUpdate && !_refreshing) {\n\t\t\t\t\tonUpdate(self);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update absolutely-positioned markers (only if the scroller isn't the viewport)\n\t\t\tif (markerEndSetter) {\n\t\t\t\tlet n = containerAnimation ? scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0) : scroll;\n\t\t\t\tmarkerStartSetter(n + (markerStartTrigger._isFlipped ? 1 : 0));\n\t\t\t\tmarkerEndSetter(n);\n\t\t\t}\n\t\t\tcaMarkerSetter && caMarkerSetter(-scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0));\n\t\t};\n\n\t\tself.enable = (reset, refresh) => {\n\t\t\tif (!self.enabled) {\n\t\t\t\tself.enabled = true;\n\t\t\t\t_addListener(scroller, \"resize\", _onResize);\n\t\t\t\tisViewport || _addListener(scroller, \"scroll\", _onScroll);\n\t\t\t\tonRefreshInit && _addListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (reset !== false) {\n\t\t\t\t\tself.progress = prevProgress = 0;\n\t\t\t\t\tscroll1 = scroll2 = lastSnap = scrollFunc();\n\t\t\t\t}\n\t\t\t\trefresh !== false && self.refresh();\n\t\t\t}\n\t\t};\n\n\t\tself.getTween = snap => snap && tweenTo ? tweenTo.tween : scrubTween;\n\n\t\tself.setPositions = (newStart, newEnd, keepClamp, pinOffset) => { // doesn't persist after refresh()! Intended to be a way to override values that were set during refresh(), like you could set it in onRefresh()\n\t\t\tif (containerAnimation) { // convert ratios into scroll positions. Remember, start/end values on ScrollTriggers that have a containerAnimation refer to the time (in seconds), NOT scroll positions.\n\t\t\t\tlet st = containerAnimation.scrollTrigger,\n\t\t\t\t\tduration = containerAnimation.duration(),\n\t\t\t\t\tchange = st.end - st.start;\n\t\t\t\tnewStart = st.start + change * newStart / duration;\n\t\t\t\tnewEnd = st.start + change * newEnd / duration;\n\t\t\t}\n\t\t\tself.refresh(false, false, {start: _keepClamp(newStart, keepClamp && !!self._startClamp), end: _keepClamp(newEnd, keepClamp && !!self._endClamp)}, pinOffset);\n\t\t\tself.update();\n\t\t};\n\n\t\tself.adjustPinSpacing = amount => {\n\t\t\tif (spacerState && amount) {\n\t\t\t\tlet i = spacerState.indexOf(direction.d) + 1;\n\t\t\t\tspacerState[i] = (parseFloat(spacerState[i]) + amount) + _px;\n\t\t\t\tspacerState[1] = (parseFloat(spacerState[1]) + amount) + _px;\n\t\t\t\t_setState(spacerState);\n\t\t\t}\n\t\t};\n\n\t\tself.disable = (reset, allowAnimation) => {\n\t\t\tif (self.enabled) {\n\t\t\t\treset !== false && self.revert(true, true);\n\t\t\t\tself.enabled = self.isActive = false;\n\t\t\t\tallowAnimation || (scrubTween && scrubTween.pause());\n\t\t\t\tprevScroll = 0;\n\t\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t\t\tonRefreshInit && _removeListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (snapDelayedCall) {\n\t\t\t\t\tsnapDelayedCall.pause();\n\t\t\t\t\ttweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);\n\t\t\t\t}\n\t\t\t\tif (!isViewport) {\n\t\t\t\t\tlet i = _triggers.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n\t\t\t\t\t\t\treturn; //don't remove the listeners if there are still other triggers referencing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_removeListener(scroller, \"resize\", _onResize);\n\t\t\t\t\tisViewport || _removeListener(scroller, \"scroll\", _onScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.kill = (revert, allowAnimation) => {\n\t\t\tself.disable(revert, allowAnimation);\n\t\t\tscrubTween && !allowAnimation && scrubTween.kill();\n\t\t\tid && (delete _ids[id]);\n\t\t\tlet i = _triggers.indexOf(self);\n\t\t\ti >= 0 && _triggers.splice(i, 1);\n\t\t\ti === _i && _direction > 0 && _i--; // if we're in the middle of a refresh() or update(), splicing would cause skips in the index, so adjust...\n\n\t\t\t// if no other ScrollTrigger instances of the same scroller are found, wipe out any recorded scroll position. Otherwise, in a single page application, for example, it could maintain scroll position when it really shouldn't.\n\t\t\ti = 0;\n\t\t\t_triggers.forEach(t => t.scroller === self.scroller && (i = 1));\n\t\t\ti || _refreshingAll || (self.scroll.rec = 0);\n\n\t\t\tif (animation) {\n\t\t\t\tanimation.scrollTrigger = null;\n\t\t\t\trevert && animation.revert({kill: false});\n\t\t\t\tallowAnimation || animation.kill();\n\t\t\t}\n\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.parentNode && m.parentNode.removeChild(m));\n\t\t\t_primary === self && (_primary = 0);\n\t\t\tif (pin) {\n\t\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t\t\ti = 0;\n\t\t\t\t_triggers.forEach(t => t.pin === pin && i++);\n\t\t\t\ti || (pinCache.spacer = 0); // if there aren't any more ScrollTriggers with the same pin, remove the spacer, otherwise it could be contaminated with old/stale values if the user re-creates a ScrollTrigger for the same element.\n\t\t\t}\n\t\t\tvars.onKill && vars.onKill(self);\n\t\t};\n\n\t\t_triggers.push(self);\n\t\tself.enable(false, false);\n\t\tcustomRevertReturn && customRevertReturn(self);\n\n\t\tif (animation && animation.add && !change) { // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick. If \"change\" is defined, we know it must be re-enabling, thus we can refresh() right away.\n\t\t\tlet updateFunc = self.update; // some browsers may fire a scroll event BEFORE a tick elapses and/or the DOMContentLoaded fires. So there's a chance update() will be called BEFORE a refresh() has happened on a Timeline-attached ScrollTrigger which means the start/end won't be calculated yet. We don't want to add conditional logic inside the update() method (like check to see if end is defined and if not, force a refresh()) because that's a function that gets hit a LOT (performance). So we swap out the real update() method for this one that'll re-attach it the first time it gets called and of course forces a refresh().\n\t\t\tself.update = () => {\n\t\t\t\tself.update = updateFunc;\n\t\t\t\tstart || end || self.refresh();\n\t\t\t};\n\t\t\tgsap.delayedCall(0.01, self.update);\n\t\t\tchange = 0.01;\n\t\t\tstart = end = 0;\n\t\t} else {\n\t\t\tself.refresh();\n\t\t}\n\t\tpin && _queueRefreshAll(); // pinning could affect the positions of other things, so make sure we queue a full refresh()\n\t}\n\n\n\tstatic register(core) {\n\t\tif (!_coreInitted) {\n\t\t\tgsap = core || _getGSAP();\n\t\t\t_windowExists() && window.document && ScrollTrigger.enable();\n\t\t\t_coreInitted = _enabled;\n\t\t}\n\t\treturn _coreInitted;\n\t}\n\n\tstatic defaults(config) {\n\t\tif (config) {\n\t\t\tfor (let p in config) {\n\t\t\t\t_defaults[p] = config[p];\n\t\t\t}\n\t\t}\n\t\treturn _defaults;\n\t}\n\n\tstatic disable(reset, kill) {\n\t\t_enabled = 0;\n\t\t_triggers.forEach(trigger => trigger[kill ? \"kill\" : \"disable\"](reset));\n\t\t_removeListener(_win, \"wheel\", _onScroll);\n\t\t_removeListener(_doc, \"scroll\", _onScroll);\n\t\tclearInterval(_syncInterval);\n\t\t_removeListener(_doc, \"touchcancel\", _passThrough);\n\t\t_removeListener(_body, \"touchstart\", _passThrough);\n\t\t_multiListener(_removeListener, _doc, \"pointerdown,touchstart,mousedown\", _pointerDownHandler);\n\t\t_multiListener(_removeListener, _doc, \"pointerup,touchend,mouseup\", _pointerUpHandler);\n\t\t_resizeDelay.kill();\n\t\t_iterateAutoRefresh(_removeListener);\n\t\tfor (let i = 0; i < _scrollers.length; i+=3) {\n\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+1]);\n\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+2]);\n\t\t}\n\t}\n\n\tstatic enable() {\n\t\t_win = window;\n\t\t_doc = document;\n\t\t_docEl = _doc.documentElement;\n\t\t_body = _doc.body;\n\t\tif (gsap) {\n\t\t\t_toArray = gsap.utils.toArray;\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t_context = gsap.core.context || _passThrough;\n\t\t\t_suppressOverwrites = gsap.core.suppressOverwrites || _passThrough;\n\t\t\t_scrollRestoration = _win.history.scrollRestoration || \"auto\";\n\t\t\t_lastScroll = _win.pageYOffset;\n\t\t\tgsap.core.globals(\"ScrollTrigger\", ScrollTrigger); // must register the global manually because in Internet Explorer, functions (classes) don't have a \"name\" property.\n\t\t\tif (_body) {\n\t\t\t\t_enabled = 1;\n\t\t\t\t_div100vh = document.createElement(\"div\"); // to solve mobile browser address bar show/hide resizing, we shouldn't rely on window.innerHeight. Instead, use a <div> with its height set to 100vh and measure that since that's what the scrolling is based on anyway and it's not affected by address bar showing/hiding.\n\t\t\t\t_div100vh.style.height = \"100vh\";\n\t\t\t\t_div100vh.style.position = \"absolute\";\n\t\t\t\t_refresh100vh();\n\t\t\t\t_rafBugFix();\n\t\t\t\tObserver.register(gsap);\n\t\t\t\t// isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\t\t\t\tScrollTrigger.isTouch = Observer.isTouch;\n\t\t\t\t_fixIOSBug = Observer.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent); // since 2017, iOS has had a bug that causes event.clientX/Y to be inaccurate when a scroll occurs, thus we must alternate ignoring every other touchmove event to work around it. See https://bugs.webkit.org/show_bug.cgi?id=181954 and https://codepen.io/GreenSock/pen/ExbrPNa/087cef197dc35445a0951e8935c41503\n\t\t\t\t_ignoreMobileResize = Observer.isTouch === 1;\n\t\t\t\t_addListener(_win, \"wheel\", _onScroll); // mostly for 3rd party smooth scrolling libraries.\n\t\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t\tif (gsap.matchMedia) {\n\t\t\t\t\tScrollTrigger.matchMedia = vars => {\n\t\t\t\t\t\tlet mm = gsap.matchMedia(),\n\t\t\t\t\t\t\tp;\n\t\t\t\t\t\tfor (p in vars) {\n\t\t\t\t\t\t\tmm.add(p, vars[p]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn mm;\n\t\t\t\t\t};\n\t\t\t\t\tgsap.addEventListener(\"matchMediaInit\", () => _revertAll());\n\t\t\t\t\tgsap.addEventListener(\"matchMediaRevert\", () => _revertRecorded());\n\t\t\t\t\tgsap.addEventListener(\"matchMedia\", () => {\n\t\t\t\t\t\t_refreshAll(0, 1);\n\t\t\t\t\t\t_dispatch(\"matchMedia\");\n\t\t\t\t\t});\n\t\t\t\t\tgsap.matchMedia(\"(orientation: portrait)\", () => { // when orientation changes, we should take new base measurements for the ignoreMobileResize feature.\n\t\t\t\t\t\t_setBaseDimensions();\n\t\t\t\t\t\treturn _setBaseDimensions;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(\"Requires GSAP 3.11.0 or later\");\n\t\t\t\t}\n\t\t\t\t_setBaseDimensions();\n\t\t\t\t_addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\t\t\t\tlet bodyStyle = _body.style,\n\t\t\t\t\tborder = bodyStyle.borderTopStyle,\n\t\t\t\t\tAnimationProto = gsap.core.Animation.prototype,\n\t\t\t\t\tbounds, i;\n\t\t\t\tAnimationProto.revert || Object.defineProperty(AnimationProto, \"revert\", { value: function() { return this.time(-0.01, true); }}); // only for backwards compatibility (Animation.revert() was added after 3.10.4)\n\t\t\t\tbodyStyle.borderTopStyle = \"solid\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\t\t\t\tbounds = _getBounds(_body);\n\t\t\t\t_vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\t\t\t\t_horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n\t\t\t\tborder ? (bodyStyle.borderTopStyle = border) : bodyStyle.removeProperty(\"border-top-style\");\n\t\t\t\t// TODO: (?) maybe move to leveraging the velocity mechanism in Observer and skip intervals.\n\t\t\t\t_syncInterval = setInterval(_sync, 250);\n\t\t\t\tgsap.delayedCall(0.5, () => _startup = 0);\n\t\t\t\t_addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\t\t\t\t_addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://gsap.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t\t\t_multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", _pointerDownHandler);\n\t\t\t\t_multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", _pointerUpHandler);\n\t\t\t\t_transformProp = gsap.utils.checkPrefix(\"transform\");\n\t\t\t\t_stateProps.push(_transformProp);\n\t\t\t\t_coreInitted = _getTime();\n\t\t\t\t_resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n\t\t\t\t_autoRefresh = [_doc, \"visibilitychange\", () => {\n\t\t\t\t\tlet w = _win.innerWidth,\n\t\t\t\t\t\th = _win.innerHeight;\n\t\t\t\t\tif (_doc.hidden) {\n\t\t\t\t\t\t_prevWidth = w;\n\t\t\t\t\t\t_prevHeight = h;\n\t\t\t\t\t} else if (_prevWidth !== w || _prevHeight !== h) {\n\t\t\t\t\t\t_onResize();\n\t\t\t\t\t}\n\t\t\t\t}, _doc, \"DOMContentLoaded\", _refreshAll, _win, \"load\", _refreshAll, _win, \"resize\", _onResize];\n\t\t\t\t_iterateAutoRefresh(_addListener);\n\t\t\t\t_triggers.forEach(trigger => trigger.enable(0, 1));\n\t\t\t\tfor (i = 0; i < _scrollers.length; i+=3) {\n\t\t\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+1]);\n\t\t\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic config(vars) {\n\t\t(\"limitCallbacks\" in vars) && (_limitCallbacks = !!vars.limitCallbacks);\n\t\tlet ms = vars.syncInterval;\n\t\tms && clearInterval(_syncInterval) || ((_syncInterval = ms) && setInterval(_sync, ms));\n\t\t(\"ignoreMobileResize\" in vars) && (_ignoreMobileResize = ScrollTrigger.isTouch === 1 && vars.ignoreMobileResize);\n\t\tif (\"autoRefreshEvents\" in vars) {\n\t\t\t_iterateAutoRefresh(_removeListener) || _iterateAutoRefresh(_addListener, vars.autoRefreshEvents || \"none\");\n\t\t\t_ignoreResize = (vars.autoRefreshEvents + \"\").indexOf(\"resize\") === -1;\n\t\t}\n\t}\n\n\tstatic scrollerProxy(target, vars) {\n\t\tlet t = _getTarget(target),\n\t\t\ti = _scrollers.indexOf(t),\n\t\t\tisViewport = _isViewport(t);\n\t\tif (~i) {\n\t\t\t_scrollers.splice(i, isViewport ? 6 : 2);\n\t\t}\n\t\tif (vars) {\n\t\t\tisViewport ? _proxies.unshift(_win, vars, _body, vars, _docEl, vars) : _proxies.unshift(t, vars);\n\t\t}\n\t}\n\n\tstatic clearMatchMedia(query) {\n\t\t_triggers.forEach(t => t._ctx && t._ctx.query === query && t._ctx.kill(true, true));\n\t}\n\n\tstatic isInViewport(element, ratio, horizontal) {\n\t\tlet bounds = (_isString(element) ? _getTarget(element) : element).getBoundingClientRect(),\n\t\t\toffset = bounds[horizontal ? _width : _height] * ratio || 0;\n\t\treturn horizontal ? bounds.right - offset > 0 && bounds.left + offset < _win.innerWidth : bounds.bottom - offset > 0 && bounds.top + offset < _win.innerHeight;\n\t}\n\n\tstatic positionInViewport(element, referencePoint, horizontal) {\n\t\t_isString(element) && (element = _getTarget(element));\n\t\tlet bounds = element.getBoundingClientRect(),\n\t\t\tsize = bounds[horizontal ? _width : _height],\n\t\t\toffset = referencePoint == null ? size / 2 : ((referencePoint in _keywords) ? _keywords[referencePoint] * size : ~referencePoint.indexOf(\"%\") ? parseFloat(referencePoint) * size / 100 : parseFloat(referencePoint) || 0);\n\t\treturn horizontal ? (bounds.left + offset) / _win.innerWidth : (bounds.top + offset) / _win.innerHeight;\n\t}\n\n\tstatic killAll(allowListeners) {\n\t\t_triggers.slice(0).forEach(t => t.vars.id !== \"ScrollSmoother\" && t.kill());\n\t\tif (allowListeners !== true) {\n\t\t\tlet listeners = _listeners.killAll || [];\n\t\t\t_listeners = {};\n\t\t\tlisteners.forEach(f => f());\n\t\t}\n\t}\n\n}\n\nScrollTrigger.version = \"3.12.5\";\nScrollTrigger.saveStyles = targets => targets ? _toArray(targets).forEach(target => { // saved styles are recorded in a consecutive alternating Array, like [element, cssText, transform attribute, cache, matchMedia, ...]\n\tif (target && target.style) {\n\t\tlet i = _savedStyles.indexOf(target);\n\t\ti >= 0 && _savedStyles.splice(i, 5);\n\t\t_savedStyles.push(target, target.style.cssText, target.getBBox && target.getAttribute(\"transform\"), gsap.core.getCache(target), _context());\n\t}\n}) : _savedStyles;\nScrollTrigger.revert = (soft, media) => _revertAll(!soft, media);\nScrollTrigger.create = (vars, animation) => new ScrollTrigger(vars, animation);\nScrollTrigger.refresh = safe => safe ? _onResize() : (_coreInitted || ScrollTrigger.register()) && _refreshAll(true);\nScrollTrigger.update = force => ++_scrollers.cache && _updateAll(force === true ? 2 : 0);\nScrollTrigger.clearScrollMemory = _clearScrollMemory;\nScrollTrigger.maxScroll = (element, horizontal) => _maxScroll(element, horizontal ? _horizontal : _vertical);\nScrollTrigger.getScrollFunc = (element, horizontal) => _getScrollFunc(_getTarget(element), horizontal ? _horizontal : _vertical);\nScrollTrigger.getById = id => _ids[id];\nScrollTrigger.getAll = () => _triggers.filter(t => t.vars.id !== \"ScrollSmoother\"); // it's common for people to ScrollTrigger.getAll(t => t.kill()) on page routes, for example, and we don't want it to ruin smooth scrolling by killing the main ScrollSmoother one.\nScrollTrigger.isScrolling = () => !!_lastScrollTime;\nScrollTrigger.snapDirectional = _snapDirectional;\nScrollTrigger.addEventListener = (type, callback) => {\n\tlet a = _listeners[type] || (_listeners[type] = []);\n\t~a.indexOf(callback) || a.push(callback);\n};\nScrollTrigger.removeEventListener = (type, callback) => {\n\tlet a = _listeners[type],\n\t\ti = a && a.indexOf(callback);\n\ti >= 0 && a.splice(i, 1);\n};\nScrollTrigger.batch = (targets, vars) => {\n\tlet result = [],\n\t\tvarsCopy = {},\n\t\tinterval = vars.interval || 0.016,\n\t\tbatchMax = vars.batchMax || 1e9,\n\t\tproxyCallback = (type, callback) => {\n\t\t\tlet elements = [],\n\t\t\t\ttriggers = [],\n\t\t\t\tdelay = gsap.delayedCall(interval, () => {callback(elements, triggers); elements = []; triggers = [];}).pause();\n\t\t\treturn self => {\n\t\t\t\telements.length || delay.restart(true);\n\t\t\t\telements.push(self.trigger);\n\t\t\t\ttriggers.push(self);\n\t\t\t\tbatchMax <= elements.length && delay.progress(1);\n\t\t\t};\n\t\t},\n\t\tp;\n\tfor (p in vars) {\n\t\tvarsCopy[p] = (p.substr(0, 2) === \"on\" && _isFunction(vars[p]) && p !== \"onRefreshInit\") ? proxyCallback(p, vars[p]) : vars[p];\n\t}\n\tif (_isFunction(batchMax)) {\n\t\tbatchMax = batchMax();\n\t\t_addListener(ScrollTrigger, \"refresh\", () => batchMax = vars.batchMax());\n\t}\n\t_toArray(targets).forEach(target => {\n\t\tlet config = {};\n\t\tfor (p in varsCopy) {\n\t\t\tconfig[p] = varsCopy[p];\n\t\t}\n\t\tconfig.trigger = target;\n\t\tresult.push(ScrollTrigger.create(config));\n\t});\n\treturn result;\n}\n\n\n// to reduce file size. clamps the scroll and also returns a duration multiplier so that if the scroll gets chopped shorter, the duration gets curtailed as well (otherwise if you're very close to the top of the page, for example, and swipe up really fast, it'll suddenly slow down and take a long time to reach the top).\nlet _clampScrollAndGetDurationMultiplier = (scrollFunc, current, end, max) => {\n\t\tcurrent > max ? scrollFunc(max) : current < 0 && scrollFunc(0);\n\t\treturn end > max ? (max - current) / (end - current) : end < 0 ? current / (current - end) : 1;\n\t},\n\t_allowNativePanning = (target, direction) => {\n\t\tif (direction === true) {\n\t\t\ttarget.style.removeProperty(\"touch-action\");\n\t\t} else {\n\t\t\ttarget.style.touchAction = direction === true ? \"auto\" : direction ? \"pan-\" + direction + (Observer.isTouch ? \" pinch-zoom\" : \"\") : \"none\"; // note: Firefox doesn't support it pinch-zoom properly, at least in addition to a pan-x or pan-y.\n\t\t}\n\t\ttarget === _docEl && _allowNativePanning(_body, direction);\n\t},\n\t_overflow = {auto: 1, scroll: 1},\n\t_nestedScroll = ({event, target, axis}) => {\n\t\tlet node = (event.changedTouches ? event.changedTouches[0] : event).target,\n\t\t\tcache = node._gsap || gsap.core.getCache(node),\n\t\t\ttime = _getTime(), cs;\n\t\tif (!cache._isScrollT || time - cache._isScrollT > 2000) { // cache for 2 seconds to improve performance.\n\t\t\twhile (node && node !== _body && ((node.scrollHeight <= node.clientHeight && node.scrollWidth <= node.clientWidth) || !(_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]))) node = node.parentNode;\n\t\t\tcache._isScroll = node && node !== target && !_isViewport(node) && (_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]);\n\t\t\tcache._isScrollT = time;\n\t\t}\n\t\tif (cache._isScroll || axis === \"x\") {\n\t\t\tevent.stopPropagation();\n\t\t\tevent._gsapAllow = true;\n\t\t}\n\t},\n\t// capture events on scrollable elements INSIDE the <body> and allow those by calling stopPropagation() when we find a scrollable ancestor\n\t_inputObserver = (target, type, inputs, nested) => Observer.create({\n\t\ttarget: target,\n\t\tcapture: true,\n\t\tdebounce: false,\n\t\tlockAxis: true,\n\t\ttype: type,\n\t\tonWheel: (nested = nested && _nestedScroll),\n\t\tonPress: nested,\n\t\tonDrag: nested,\n\t\tonScroll: nested,\n\t\tonEnable: () => inputs && _addListener(_doc, Observer.eventTypes[0], _captureInputs, false, true),\n\t\tonDisable: () => _removeListener(_doc, Observer.eventTypes[0], _captureInputs, true)\n\t}),\n\t_inputExp = /(input|label|select|textarea)/i,\n\t_inputIsFocused,\n\t_captureInputs = e => {\n\t\tlet isInput = _inputExp.test(e.target.tagName);\n\t\tif (isInput || _inputIsFocused) {\n\t\t\te._gsapAllow = true;\n\t\t\t_inputIsFocused = isInput;\n\t\t}\n\t},\n\t_getScrollNormalizer = vars => {\n\t\t_isObject(vars) || (vars = {});\n\t\tvars.preventDefault = vars.isNormalizer = vars.allowClicks = true;\n\t\tvars.type || (vars.type = \"wheel,touch\");\n\t\tvars.debounce = !!vars.debounce;\n\t\tvars.id = vars.id || \"normalizer\";\n\t\tlet {normalizeScrollX, momentum, allowNestedScroll, onRelease} = vars,\n\t\t\tself, maxY,\n\t\t\ttarget = _getTarget(vars.target) || _docEl,\n\t\t\tsmoother = gsap.core.globals().ScrollSmoother,\n\t\t\tsmootherInstance = smoother && smoother.get(),\n\t\t\tcontent = _fixIOSBug && ((vars.content && _getTarget(vars.content)) || (smootherInstance && vars.content !== false && !smootherInstance.smooth() && smootherInstance.content())),\n\t\t\tscrollFuncY = _getScrollFunc(target, _vertical),\n\t\t\tscrollFuncX = _getScrollFunc(target, _horizontal),\n\t\t\tscale = 1,\n\t\t\tinitialScale = (Observer.isTouch && _win.visualViewport ? _win.visualViewport.scale * _win.visualViewport.width : _win.outerWidth) / _win.innerWidth,\n\t\t\twheelRefresh = 0,\n\t\t\tresolveMomentumDuration = _isFunction(momentum) ? () => momentum(self) : () => momentum || 2.8,\n\t\t\tlastRefreshID, skipTouchMove,\n\t\t\tinputObserver = _inputObserver(target, vars.type, true, allowNestedScroll),\n\t\t\tresumeTouchMove = () => skipTouchMove = false,\n\t\t\tscrollClampX = _passThrough,\n\t\t\tscrollClampY = _passThrough,\n\t\t\tupdateClamps = () => {\n\t\t\t\tmaxY = _maxScroll(target, _vertical);\n\t\t\t\tscrollClampY = _clamp(_fixIOSBug ? 1 : 0, maxY);\n\t\t\t\tnormalizeScrollX && (scrollClampX = _clamp(0, _maxScroll(target, _horizontal)));\n\t\t\t\tlastRefreshID = _refreshID;\n\t\t\t},\n\t\t\tremoveContentOffset = () => {\n\t\t\t\tcontent._gsap.y = _round(parseFloat(content._gsap.y) + scrollFuncY.offset) + \"px\";\n\t\t\t\tcontent.style.transform = \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, \" + parseFloat(content._gsap.y) + \", 0, 1)\";\n\t\t\t\tscrollFuncY.offset = scrollFuncY.cacheID = 0;\n\t\t\t},\n\t\t\tignoreDrag = () => {\n\t\t\t\tif (skipTouchMove) {\n\t\t\t\t\trequestAnimationFrame(resumeTouchMove);\n\t\t\t\t\tlet offset = _round(self.deltaY / 2),\n\t\t\t\t\t\tscroll = scrollClampY(scrollFuncY.v - offset);\n\t\t\t\t\tif (content && scroll !== scrollFuncY.v + scrollFuncY.offset) {\n\t\t\t\t\t\tscrollFuncY.offset = scroll - scrollFuncY.v;\n\t\t\t\t\t\tlet y = _round((parseFloat(content && content._gsap.y) || 0) - scrollFuncY.offset);\n\t\t\t\t\t\tcontent.style.transform = \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, \" + y + \", 0, 1)\";\n\t\t\t\t\t\tcontent._gsap.y = y + \"px\";\n\t\t\t\t\t\tscrollFuncY.cacheID = _scrollers.cache;\n\t\t\t\t\t\t_updateAll();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tscrollFuncY.offset && removeContentOffset();\n\t\t\t\tskipTouchMove = true;\n\t\t\t},\n\t\t\ttween, startScrollX, startScrollY, onStopDelayedCall,\n\t\t\tonResize = () => { // if the window resizes, like on an iPhone which Apple FORCES the address bar to show/hide even if we event.preventDefault(), it may be scrolling too far now that the address bar is showing, so we must dynamically adjust the momentum tween.\n\t\t\t\tupdateClamps();\n\t\t\t\tif (tween.isActive() && tween.vars.scrollY > maxY) {\n\t\t\t\t\tscrollFuncY() > maxY ? tween.progress(1) && scrollFuncY(maxY) : tween.resetTo(\"scrollY\", maxY);\n\t\t\t\t}\n\t\t\t};\n\t\tcontent && gsap.set(content, {y: \"+=0\"}); // to ensure there's a cache (element._gsap)\n\t\tvars.ignoreCheck = e => (_fixIOSBug && e.type === \"touchmove\" && ignoreDrag(e)) || (scale > 1.05 && e.type !== \"touchstart\") || self.isGesturing || (e.touches && e.touches.length > 1);\n\t\tvars.onPress = () => {\n\t\t\tskipTouchMove = false;\n\t\t\tlet prevScale = scale;\n\t\t\tscale = _round(((_win.visualViewport && _win.visualViewport.scale) || 1) / initialScale);\n\t\t\ttween.pause();\n\t\t\tprevScale !== scale && _allowNativePanning(target, scale > 1.01 ? true : normalizeScrollX ? false : \"x\");\n\t\t\tstartScrollX = scrollFuncX();\n\t\t\tstartScrollY = scrollFuncY();\n\t\t\tupdateClamps();\n\t\t\tlastRefreshID = _refreshID;\n\t\t}\n\t\tvars.onRelease = vars.onGestureStart = (self, wasDragging) => {\n\t\t\tscrollFuncY.offset && removeContentOffset();\n\t\t\tif (!wasDragging) {\n\t\t\t\tonStopDelayedCall.restart(true);\n\t\t\t} else {\n\t\t\t\t_scrollers.cache++; // make sure we're pulling the non-cached value\n\t\t\t\t// alternate algorithm: durX = Math.min(6, Math.abs(self.velocityX / 800)),\tdur = Math.max(durX, Math.min(6, Math.abs(self.velocityY / 800))); dur = dur * (0.4 + (1 - _power4In(dur / 6)) * 0.6)) * (momentumSpeed || 1)\n\t\t\t\tlet dur = resolveMomentumDuration(),\n\t\t\t\t\tcurrentScroll, endScroll;\n\t\t\t\tif (normalizeScrollX) {\n\t\t\t\t\tcurrentScroll = scrollFuncX();\n\t\t\t\t\tendScroll = currentScroll + (dur * 0.05 * -self.velocityX) / 0.227; // the constant .227 is from power4(0.05). velocity is inverted because scrolling goes in the opposite direction.\n\t\t\t\t\tdur *= _clampScrollAndGetDurationMultiplier(scrollFuncX, currentScroll, endScroll, _maxScroll(target, _horizontal));\n\t\t\t\t\ttween.vars.scrollX = scrollClampX(endScroll);\n\t\t\t\t}\n\t\t\t\tcurrentScroll = scrollFuncY();\n\t\t\t\tendScroll = currentScroll + (dur * 0.05 * -self.velocityY) / 0.227; // the constant .227 is from power4(0.05)\n\t\t\t\tdur *= _clampScrollAndGetDurationMultiplier(scrollFuncY, currentScroll, endScroll, _maxScroll(target, _vertical));\n\t\t\t\ttween.vars.scrollY = scrollClampY(endScroll);\n\t\t\t\ttween.invalidate().duration(dur).play(0.01);\n\t\t\t\tif (_fixIOSBug && tween.vars.scrollY >= maxY || currentScroll >= maxY-1) { // iOS bug: it'll show the address bar but NOT fire the window \"resize\" event until the animation is done but we must protect against overshoot so we leverage an onUpdate to do so.\n\t\t\t\t\tgsap.to({}, {onUpdate: onResize, duration: dur});\n\t\t\t\t}\n\t\t\t}\n\t\t\tonRelease && onRelease(self);\n\t\t};\n\t\tvars.onWheel = () => {\n\t\t\ttween._ts && tween.pause();\n\t\t\tif (_getTime() - wheelRefresh > 1000) { // after 1 second, refresh the clamps otherwise that'll only happen when ScrollTrigger.refresh() is called or for touch-scrolling.\n\t\t\t\tlastRefreshID = 0;\n\t\t\t\twheelRefresh = _getTime();\n\t\t\t}\n\t\t};\n\t\tvars.onChange = (self, dx, dy, xArray, yArray) => {\n\t\t\t_refreshID !== lastRefreshID && updateClamps();\n\t\t\tdx && normalizeScrollX && scrollFuncX(scrollClampX(xArray[2] === dx ? startScrollX + (self.startX - self.x) : scrollFuncX() + dx - xArray[1])); // for more precision, we track pointer/touch movement from the start, otherwise it'll drift.\n\t\t\tif (dy) {\n\t\t\t\tscrollFuncY.offset && removeContentOffset();\n\t\t\t\tlet isTouch = yArray[2] === dy,\n\t\t\t\t\ty = isTouch ? startScrollY + self.startY - self.y : scrollFuncY() + dy - yArray[1],\n\t\t\t\t\tyClamped = scrollClampY(y);\n\t\t\t\tisTouch && y !== yClamped && (startScrollY += yClamped - y);\n\t\t\t\tscrollFuncY(yClamped);\n\t\t\t}\n\t\t\t(dy || dx) && _updateAll();\n\t\t};\n\t\tvars.onEnable = () => {\n\t\t\t_allowNativePanning(target, normalizeScrollX ? false : \"x\");\n\t\t\tScrollTrigger.addEventListener(\"refresh\", onResize);\n\t\t\t_addListener(_win, \"resize\", onResize);\n\t\t\tif (scrollFuncY.smooth) {\n\t\t\t\tscrollFuncY.target.style.scrollBehavior = \"auto\";\n\t\t\t\tscrollFuncY.smooth = scrollFuncX.smooth = false;\n\t\t\t}\n\t\t\tinputObserver.enable();\n\t\t};\n\t\tvars.onDisable = () => {\n\t\t\t_allowNativePanning(target, true);\n\t\t\t_removeListener(_win, \"resize\", onResize);\n\t\t\tScrollTrigger.removeEventListener(\"refresh\", onResize);\n\t\t\tinputObserver.kill();\n\t\t};\n\t\tvars.lockAxis = vars.lockAxis !== false;\n\t\tself = new Observer(vars);\n\t\tself.iOS = _fixIOSBug; // used in the Observer getCachedScroll() function to work around an iOS bug that wreaks havoc with TouchEvent.clientY if we allow scroll to go all the way back to 0.\n\t\t_fixIOSBug && !scrollFuncY() && scrollFuncY(1); // iOS bug causes event.clientY values to freak out (wildly inaccurate) if the scroll position is exactly 0.\n\t\t_fixIOSBug && gsap.ticker.add(_passThrough); // prevent the ticker from sleeping\n\t\tonStopDelayedCall = self._dc;\n\t\ttween = gsap.to(self, {ease: \"power4\", paused: true, inherit: false, scrollX: normalizeScrollX ? \"+=0.1\" : \"+=0\", scrollY: \"+=0.1\", modifiers: {scrollY: _interruptionTracker(scrollFuncY, scrollFuncY(), () => tween.pause())\t}, onUpdate: _updateAll, onComplete: onStopDelayedCall.vars.onComplete}); // we need the modifier to sense if the scroll position is altered outside of the momentum tween (like with a scrollTo tween) so we can pause() it to prevent conflicts.\n\t\treturn self;\n\t};\n\nScrollTrigger.sort = func => _triggers.sort(func || ((a, b) => (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6)));\nScrollTrigger.observe = vars => new Observer(vars);\nScrollTrigger.normalizeScroll = vars => {\n\tif (typeof(vars) === \"undefined\") {\n\t\treturn _normalizer;\n\t}\n\tif (vars === true && _normalizer) {\n\t\treturn _normalizer.enable();\n\t}\n\tif (vars === false) {\n\t\t_normalizer && _normalizer.kill();\n\t\t_normalizer = vars;\n\t\treturn;\n\t}\n\tlet normalizer = vars instanceof Observer ? vars : _getScrollNormalizer(vars);\n\t_normalizer && _normalizer.target === normalizer.target && _normalizer.kill();\n\t_isViewport(normalizer.target) && (_normalizer = normalizer);\n\treturn normalizer;\n};\n\n\nScrollTrigger.core = { // smaller file size way to leverage in ScrollSmoother and Observer\n\t_getVelocityProp,\n\t_inputObserver,\n\t_scrollers,\n\t_proxies,\n\tbridge: {\n\t\t// when normalizeScroll sets the scroll position (ss = setScroll)\n\t\tss: () => {\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t},\n\t\t// a way to get the _refreshing value in Observer\n\t\tref: () => _refreshing\n\t}\n};\n\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\n\nexport { ScrollTrigger as default };"],
  "mappings": "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",
  "names": ["value", "gsap", "_coreInitted", "_win", "_doc", "_docEl", "_body", "_root", "_clamp", "_normalizer", "_context", "_startup", "_getTime", "_getGSAP", "_isViewport", "a", "_addListener", "_removeListener", "_onScroll", "ScrollTrigger", "offset", "cs", "prevProgress", "snap", "change", "self"]
}
